<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>深度学习笔记（数学基础）</title>
    <url>/2022/10/06/deepLearning/</url>
    <content><![CDATA[<h2 id="神经网络基本原理"><a href="#神经网络基本原理" class="headerlink" title="神经网络基本原理"></a>神经网络基本原理</h2><h3 id="得分函数"><a href="#得分函数" class="headerlink" title="得分函数"></a>得分函数</h3><p>$<br>f(x;W)=Wx=\begin{pmatrix}W_{1}&amp;W_{2}&amp;… &amp;W_{n}\\\end{pmatrix}\begin{pmatrix}x_{1}\\x_{2}\\ … \\x_{n}\end{pmatrix}=\sum^{n}_{i=1}{W_{i}x_{i}}<br>$</p>
<p>$<br>f(x;W)=Wx=\begin{pmatrix}W_{11}&amp;W_{12}&amp;… &amp;W_{1n}\\W_{21}&amp;W_{22}&amp;… &amp;W_{2n}\end{pmatrix}\begin{pmatrix}x_{1}\\x_{2}\\ … \\x_{n}\end{pmatrix}=\begin{pmatrix}Y_{1}\\Y_{2}\end{pmatrix}<br>$</p>
<p>结果的行数表示类别数，<strong>x</strong>向量表示训练数据，W为权重参数</p>
<p>线性函数：$f(x;W)=Wx+b(偏置参数矩阵)$</p>
<blockquote>
<p>如何根据$\begin{pmatrix}Y_{1}\\Y_{2}\\ … \\Y_{m}\end{pmatrix}$求得对应类别的概率？<strong>归一化</strong></p>
<p>$P(Y=k|X=x_{i})=\frac{e^{s_{k}}}{\sum_{j}{e^{s_{j}}}}$</p>
<p>总结：先求<u>指数</u>，再求<u>所占分数</u></p>
</blockquote>
<span id="more"></span>
<h3 id="损失函数"><a href="#损失函数" class="headerlink" title="损失函数"></a>损失函数</h3><ol>
<li><p>例如，$L_{i}=\sum_{j\neq y_{i}}{max(0,s_{j}-s_{y_{i}} + 1)}$,其中$y_{i}$为正确类别</p>
<p>$L=\frac{1}{N}\sum_{i=1}^{n}\sum_{j\neq y_{i}}max(0,f(x_{i};W)_{j}-f(x_{i};W)_{y_{i}} + 1)+\lambda R(N)$</p>
<p>其中$R(N)$为正则化惩罚项，<strong>$\lambda$增大，会降低过拟合的风险</strong></p>
<p>$R(N)=\sum_{k}\sum_{l}W_{k,l}^{2}$</p>
<p>训练目标：使损失函数L减小</p>
</li>
<li><p>例如，$e=\frac{1}{2}(y-\hat{y})^2$,多样本$E=e^{(1)}+e^{(2)}+…+e^{(n)}=\frac{1}{2}\sum_{i=1}^{n}(y^{(i)}-\hat{y}^{(i)})^2$</p>
<p>其中$\hat{y}^{(i)}=\phi(z^{(i)})=Wx^{(i)}$,$\phi(x)$是线性激活函数</p>
<p>$E=\frac{1}{2}\sum_{i=1}^{n}(y^{(i)}-\hat{y}^{(i)})^2=\frac{1}{2}\sum_{i=1}^{n}(y^{(i)}-Wx^{(i)})^2$</p>
<p>目标：训练合适的W，使差值E取最小值</p>
</li>
</ol>
<h3 id="激活函数（阈值）"><a href="#激活函数（阈值）" class="headerlink" title="激活函数（阈值）"></a>激活函数（阈值）</h3><ol>
<li>Sigmoid函数：$f(z)=\frac{1}{1+e^{-z}}$（缺点：计算时间长）</li>
</ol>
<p><img src="\images\deep1.png" style="zoom:33%;" /></p>
<ol>
<li>ReLu函数：$ReLu(x) = max(0,x)$（优点：计算速度快）</li>
</ol>
<h3 id="梯度下降"><a href="#梯度下降" class="headerlink" title="梯度下降"></a>梯度下降</h3><p>设$W=\begin{pmatrix}<br>w_{1}&amp;w_{2}&amp;… &amp;w_{n}\\<br>\end{pmatrix}$更新权重$w:=w+\Delta w$</p>
<p>$\Delta w=-\eta \nabla J(w)$,其中$\eta$为学习率，表示学习速度（要适中）</p>
<p><img src="\images\deep2.png" style="zoom:50%;" /></p>
<p><img src="\images\deep3.png" style="zoom:50%;" /></p>
<h3 id="多层神经网络"><a href="#多层神经网络" class="headerlink" title="多层神经网络"></a>多层神经网络</h3><p><img src="\images\deep4.png" style="zoom:67%;" /></p>
<ul>
<li><strong>整体架构</strong>：输入层-隐藏层（可以包含多层）-输出层</li>
<li>大于一层的就被称为深度神经网络，层次越多数据处理能力越强</li>
<li>每个连接都有一个权值w</li>
<li>在Hidden Layer增加<strong>神经元</strong>的数量以获取更多特征</li>
</ul>
<p><strong>多层神经网络的训练过程</strong></p>
<blockquote>
<ol>
<li>从输入层开始，将数据经过神经网络传输到输出层，这一步是<strong>前向传播</strong>。</li>
<li>根据输出，计算误差(预测结果和已知结果之间的差异)，得到代价函数。利用梯度下降法最小化误差。</li>
<li>梯度下降法需要计算每个权重的梯度，使用<strong>反向传播</strong>算法计算梯度，根据梯度调整权重值。</li>
</ol>
<p>重复以上3个步骤训练权重参数W。</p>
<p>资料来源：<a href="https://www.qikegu.com/docs/3781">深度学习 – 多层神经网络 | 奇客谷教程 💯 (qikegu.com)</a></p>
</blockquote>
<p><strong>反向传播</strong>：通过链式求导法则求代价函数对各层参数W的偏导数</p>
<h2 id="卷积神经网络"><a href="#卷积神经网络" class="headerlink" title="卷积神经网络"></a>卷积神经网络</h2><p>整体架构：卷积层→Relu层→池化层→连接各层→全连接层</p>
]]></content>
      <tags>
        <tag>深度学习</tag>
      </tags>
  </entry>
  <entry>
    <title>大一上C语言小作业——2048小游戏</title>
    <url>/2022/02/24/2048/</url>
    <content><![CDATA[<h3 id="大一上C语言小作业——2048小游戏"><a href="#大一上C语言小作业——2048小游戏" class="headerlink" title="大一上C语言小作业——2048小游戏"></a>大一上C语言小作业——2048小游戏</h3><p>项目要求：使用C语言编写2048小游戏</p>
<h4 id="界面设置部分"><a href="#界面设置部分" class="headerlink" title="界面设置部分"></a>界面设置部分</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">HideCursor</span><span class="params">()</span> &#123;            <span class="comment">//隐藏光标</span></span><br><span class="line">    CONSOLE_CURSOR_INFO curInfo;</span><br><span class="line">    curInfo.dwSize = <span class="number">1</span>;</span><br><span class="line">    curInfo.bVisible = FALSE;</span><br><span class="line">    HANDLE handle = GetStdHandle(STD_OUTPUT_HANDLE);</span><br><span class="line">    SetConsoleCursorInfo(handle, &amp;curInfo);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Goto</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> &#123;       <span class="comment">//光标移动到(x,y)位置</span></span><br><span class="line">    COORD pos;</span><br><span class="line">    pos.X = x;</span><br><span class="line">    pos.Y = y;</span><br><span class="line">    HANDLE handle = GetStdHandle(STD_OUTPUT_HANDLE);</span><br><span class="line">    SetConsoleCursorPosition(handle, pos);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PreWork</span><span class="params">()</span> &#123;</span><br><span class="line">    system(<span class="string">&quot;title 2048&quot;</span>);        <span class="comment">//窗口标题为2048</span></span><br><span class="line">    system(<span class="string">&quot;mode con cols=40 lines=21&quot;</span>);  <span class="comment">//窗口大小</span></span><br><span class="line">    system(<span class="string">&quot;chcp 65001 &gt; nul&quot;</span>);  <span class="comment">//中文支持</span></span><br><span class="line">    HideCursor();                <span class="comment">//隐藏光标</span></span><br><span class="line">    CONSOLE_FONT_INFOEX cfi;</span><br><span class="line">    cfi.cbSize = <span class="keyword">sizeof</span> cfi;</span><br><span class="line">    cfi.nFont = <span class="number">0</span>;</span><br><span class="line">    cfi.dwFontSize.X = <span class="number">15</span>;</span><br><span class="line">    cfi.dwFontSize.Y = <span class="number">30</span>;</span><br><span class="line">    cfi.FontFamily = FF_DONTCARE;</span><br><span class="line">    cfi.FontWeight = FW_NORMAL;</span><br><span class="line">    SetCurrentConsoleFontEx(GetStdHandle(STD_OUTPUT_HANDLE), FALSE, &amp;cfi);</span><br><span class="line">    srand((<span class="type">unsigned</span>) time(<span class="literal">NULL</span>));  <span class="comment">//随机函数种子</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="游戏初始化"><a href="#游戏初始化" class="headerlink" title="游戏初始化"></a>游戏初始化</h4><p>游戏”棋盘“初始化要做的事：</p>
<ul>
<li>清空“棋盘”</li>
<li>生成两个数（2或4），其中生成2的概率较大</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">InitGameMap</span><span class="params">()</span> &#123;</span><br><span class="line">    score = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">memset</span>(gameMap, <span class="number">-1</span>, <span class="keyword">sizeof</span>(gameMap));</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">            gameMap[i][j] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> total = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (total &lt; <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="type">int</span> x = rand() % <span class="number">4</span> + <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> y = rand() % <span class="number">4</span> + <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> temp = rand() % <span class="number">6</span> + <span class="number">1</span>;  <span class="comment">//temp 的范围是[1, 6]</span></span><br><span class="line">        <span class="type">int</span> num = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (temp == <span class="number">1</span>) num = <span class="number">4</span>;     <span class="comment">//设置1/6的概率生成数字4</span></span><br><span class="line">        <span class="keyword">if</span> (!gameMap[x][y]) &#123;</span><br><span class="line">            gameMap[x][y] = num;</span><br><span class="line">            total++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<h4 id="移动"><a href="#移动" class="headerlink" title="移动"></a>移动</h4><p>2048游戏中最关键的就是处理按下方向键后，棋盘中数字的移动。以向左移动为例：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">MoveLeft</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;  <span class="comment">//处理第i行</span></span><br><span class="line">        <span class="type">int</span> k = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">2</span>; j &lt;= n; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (gameMap[i][j]) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!gameMap[i][k]) &#123;                      <span class="comment">// gameMap[i,k] is empty</span></span><br><span class="line">                    gameMap[i][k] = gameMap[i][j];</span><br><span class="line">                    gameMap[i][j] = <span class="number">0</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (gameMap[i][k] != gameMap[i][j]) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (k + <span class="number">1</span> != j) &#123;</span><br><span class="line">                        gameMap[i][k + <span class="number">1</span>] = gameMap[i][j];</span><br><span class="line">                        gameMap[i][j] = <span class="number">0</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    k++;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;                                   <span class="comment">//merge:gameMap[i][k] ==gameMap[i][j]</span></span><br><span class="line">                    gameMap[i][k] &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">                    gameMap[i][j] = <span class="number">0</span>;</span><br><span class="line">                    score += gameMap[i][k];</span><br><span class="line">                    k++;                                   <span class="comment">// the number can&#x27;t be merged again</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>其余移动原理相同，不再赘述。</p>
<h4 id="判断游戏输赢"><a href="#判断游戏输赢" class="headerlink" title="判断游戏输赢"></a>判断游戏输赢</h4><p><code>CheckGame()</code>函数用来判断游戏输赢：</p>
<ul>
<li>若棋盘上有数字达到2048则<strong>胜利</strong></li>
<li>若棋盘已满且无法移动（任何两个相邻的数都不相同）则<strong>失败</strong></li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">CheckGame</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> count_of_zero = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!gameMap[i][j]) count_of_zero++;</span><br><span class="line">            <span class="keyword">if</span> (gameMap[i][j] == <span class="number">2048</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;                                 <span class="comment">// win</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">if</span> (count_of_zero)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;                                         <span class="comment">// continue</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">            <span class="keyword">if</span> (gameMap[i][j] == gameMap[i + <span class="number">1</span>][j]</span><br><span class="line">                || gameMap[i][j] == gameMap[i - <span class="number">1</span>][j]</span><br><span class="line">                || gameMap[i][j] == gameMap[i][j + <span class="number">1</span>]</span><br><span class="line">                || gameMap[i][j] == gameMap[i][j - <span class="number">1</span>])</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;                                 <span class="comment">// continue</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;                                            <span class="comment">// lose</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="打印棋盘-amp-更新棋盘"><a href="#打印棋盘-amp-更新棋盘" class="headerlink" title="打印棋盘&amp;更新棋盘"></a>打印棋盘&amp;更新棋盘</h4><ul>
<li>尽量减少<code>system(&quot;pause&quot;)</code>语句的运用，能减少屏幕闪烁的情况。</li>
<li><code>PrintNumber</code>函数用来格式化地打印格子中的数</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">PrintNumber</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (x &lt; <span class="number">10</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;  %d │&quot;</span>, x);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (x &lt; <span class="number">100</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot; %d │&quot;</span>, x);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%4d│&quot;</span>, x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">ShowMap</span><span class="params">()</span> &#123;</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">    Goto(<span class="number">5</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span> (score &gt; best) best = score;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Score: %6d  Best: %6d\n&quot;</span>, score, best);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;      _______________________ \n\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;       ┌────┬────┬────┬────┐\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;       │&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (gameMap[i][j])</span><br><span class="line">                PrintNumber(gameMap[i][j]);</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;    │&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (i &lt;= <span class="number">3</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;       ├────┼────┼────┼────┤\n&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;       └────┴────┴────┴────┘\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;      _______________________ \n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;[Q] Back to menu.&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">UpdateMap</span><span class="params">()</span> &#123;  <span class="comment">//棋盘不用重新打印</span></span><br><span class="line">    Goto(<span class="number">5</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span> (score &gt; best) best = score;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Score: %6d  Best: %6d\n&quot;</span>, score, best);</span><br><span class="line">    Goto(<span class="number">0</span>, <span class="number">3</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">            Goto(<span class="number">3</span> + <span class="number">5</span> * j, i * <span class="number">2</span> + <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">if</span> (gameMap[i][j])</span><br><span class="line">                PrintNumber(gameMap[i][j]);</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;    &quot;</span>);<span class="comment">//4:</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="游戏进行"><a href="#游戏进行" class="headerlink" title="游戏进行"></a>游戏进行</h4><ul>
<li>判断是新游戏模式还是旧游戏模式，如果是新游戏，则要初始化棋盘</li>
<li>处理键盘输入，进行数字的移动并生成新的数字</li>
<li>每次判断游戏是否结束</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">Game</span><span class="params">(<span class="type">int</span> game_type)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (game_type == <span class="number">1</span>) &#123;</span><br><span class="line">        InitGameMap();   <span class="comment">//new game</span></span><br><span class="line">        have_old_game = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> haveMap = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!haveMap) &#123;</span><br><span class="line">            ShowMap();</span><br><span class="line">            haveMap = <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            UpdateMap();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> state = CheckGame();</span><br><span class="line">        <span class="keyword">if</span> (CheckGame() == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n              You Win!\n&quot;</span>);</span><br><span class="line">            system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">            have_old_game = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (CheckGame() == <span class="number">-1</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n              You Lose!\n&quot;</span>);</span><br><span class="line">            have_old_game = <span class="number">0</span>;</span><br><span class="line">            system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">char</span> type;</span><br><span class="line">        <span class="type">int</span> flag = <span class="number">0</span>;</span><br><span class="line">        type = getch();</span><br><span class="line">        <span class="keyword">switch</span> (type) &#123;</span><br><span class="line">            <span class="keyword">case</span> UP:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;w&#x27;</span>:</span><br><span class="line">                MoveUp();</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> DOWN:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;s&#x27;</span>:</span><br><span class="line">                MoveDown();</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> LEFT:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;a&#x27;</span>:</span><br><span class="line">                MoveLeft();</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> RIGHT:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;d&#x27;</span>:</span><br><span class="line">                MoveRight();</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;q&#x27;</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;Q&#x27;</span>:</span><br><span class="line">                haveMap = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">            <span class="type">int</span> count_of_zero = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">                    <span class="keyword">if</span> (!gameMap[i][j]) count_of_zero++;</span><br><span class="line">            <span class="keyword">if</span> (count_of_zero &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="type">int</span> total = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">while</span> (total &lt; <span class="number">1</span>) &#123;</span><br><span class="line">                    <span class="type">int</span> x = rand() % <span class="number">4</span> + <span class="number">1</span>;</span><br><span class="line">                    <span class="type">int</span> y = rand() % <span class="number">4</span> + <span class="number">1</span>;</span><br><span class="line">                    <span class="type">int</span> temp = rand() % <span class="number">6</span> + <span class="number">1</span>;</span><br><span class="line">                    <span class="type">int</span> num = <span class="number">2</span>;</span><br><span class="line">                    <span class="keyword">if</span> (temp == <span class="number">1</span>) num = <span class="number">4</span>;</span><br><span class="line">                    <span class="keyword">if</span> (!gameMap[x][y]) &#123;</span><br><span class="line">                        gameMap[x][y] = num;</span><br><span class="line">                        total++;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="菜单界面"><a href="#菜单界面" class="headerlink" title="菜单界面"></a>菜单界面</h4><p>菜单界面<code>Menu()</code>要处理通过上下键或[W][S]键选择模式。<code>ShowMenu(x)</code>函数用来打印当前选择了<script type="math/tex">x</script>号模式时的菜单界面。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">ShowMenu</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">    <span class="type">int</span> print_X = <span class="number">14</span>;</span><br><span class="line">    Goto(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;       ____   ___  _  _    ___  \n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;      |___ \\ / _ \\| || |  ( _ ) \n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;        __) | | | | || |_ / _ \\ \n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;       / __/| |_| |__   _| (_) |\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;      |_____|\\___/   |_|  \\___/ \n&quot;</span>);</span><br><span class="line">    Goto(print_X, <span class="number">7</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;1.New Game\n&quot;</span>);</span><br><span class="line">    Goto(print_X, <span class="number">8</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;2.Old Game\n&quot;</span>);</span><br><span class="line">    Goto(print_X, <span class="number">9</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;3.Exit\n&quot;</span>);</span><br><span class="line">    Goto(print_X - <span class="number">1</span>, <span class="number">6</span> + x);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;&gt;&quot;</span>);</span><br><span class="line">    Goto(<span class="number">3</span>, <span class="number">11</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Please type [UP][DOWN] or [w][s] \nto choose your game.\n   Type [ENTER] to enter the game.&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Menu</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> now_point = <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> last_point = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> haveMenu = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="type">char</span> type;</span><br><span class="line">        <span class="type">int</span> flag = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (!haveMenu) &#123;</span><br><span class="line">            ShowMenu(now_point);</span><br><span class="line">            haveMenu = <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            Goto(<span class="number">14</span> - <span class="number">1</span>, <span class="number">6</span> + now_point);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;&gt;&quot;</span>);</span><br><span class="line">            Goto(<span class="number">14</span> - <span class="number">1</span>, <span class="number">6</span> + last_point);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        type = getch();</span><br><span class="line">        <span class="keyword">switch</span> (type) &#123;</span><br><span class="line">            <span class="keyword">case</span> UP:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;w&#x27;</span>:</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                last_point = now_point;</span><br><span class="line">                now_point = (now_point + <span class="number">1</span>) % <span class="number">3</span> + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> DOWN:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;s&#x27;</span>:</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                last_point = now_point;</span><br><span class="line">                now_point = now_point % <span class="number">3</span> + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> ENTER:</span><br><span class="line">                <span class="keyword">if</span> (now_point &lt;= <span class="number">2</span>) &#123;</span><br><span class="line">                    haveMenu = <span class="number">0</span>;</span><br><span class="line">                    Game(now_point);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;conio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ROW 6</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> COL 6</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAP_ROW 40</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAP_COL 30</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> UP 72</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DOWN 80</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LEFT 75</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> RIGHT 77</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ENTER 13</span></span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> n = <span class="number">4</span>;</span><br><span class="line"><span class="type">int</span> score = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> best = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> gameMap[ROW][COL];</span><br><span class="line"><span class="type">int</span> have_old_game = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">HideCursor</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Goto</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">InitGameMap</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PreWork</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">ShowMap</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">UpdateMap</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Game</span><span class="params">(<span class="type">int</span> game_type)</span>;     <span class="comment">// begin the game</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">MoveLeft</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">MoveRight</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">MoveUp</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">MoveDown</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">ShowMenu</span><span class="params">(<span class="type">int</span> x)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Menu</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PrintNumber</span><span class="params">(<span class="type">int</span> x)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">CheckGame</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    PreWork();</span><br><span class="line">    Menu();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">HideCursor</span><span class="params">()</span> &#123;</span><br><span class="line">    CONSOLE_CURSOR_INFO curInfo;</span><br><span class="line">    curInfo.dwSize = <span class="number">1</span>;</span><br><span class="line">    curInfo.bVisible = FALSE;</span><br><span class="line">    HANDLE handle = GetStdHandle(STD_OUTPUT_HANDLE);</span><br><span class="line">    SetConsoleCursorInfo(handle, &amp;curInfo);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Goto</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> &#123;</span><br><span class="line">    COORD pos;</span><br><span class="line">    pos.X = x;</span><br><span class="line">    pos.Y = y;</span><br><span class="line">    HANDLE handle = GetStdHandle(STD_OUTPUT_HANDLE);</span><br><span class="line">    SetConsoleCursorPosition(handle, pos);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PreWork</span><span class="params">()</span> &#123;</span><br><span class="line">    system(<span class="string">&quot;title 2048&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;mode con cols=40 lines=21&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;chcp 65001 &gt; nul&quot;</span>);  <span class="comment">//Chinese</span></span><br><span class="line">    HideCursor();</span><br><span class="line">    CONSOLE_FONT_INFOEX cfi;</span><br><span class="line">    cfi.cbSize = <span class="keyword">sizeof</span> cfi;</span><br><span class="line">    cfi.nFont = <span class="number">0</span>;</span><br><span class="line">    cfi.dwFontSize.X = <span class="number">15</span>;</span><br><span class="line">    cfi.dwFontSize.Y = <span class="number">30</span>;</span><br><span class="line">    cfi.FontFamily = FF_DONTCARE;</span><br><span class="line">    cfi.FontWeight = FW_NORMAL;</span><br><span class="line">    SetCurrentConsoleFontEx(GetStdHandle(STD_OUTPUT_HANDLE), FALSE, &amp;cfi);</span><br><span class="line">    srand((<span class="type">unsigned</span>) time(<span class="literal">NULL</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">InitGameMap</span><span class="params">()</span> &#123;</span><br><span class="line">    score = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">memset</span>(gameMap, <span class="number">-1</span>, <span class="keyword">sizeof</span>(gameMap));</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">            gameMap[i][j] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> total = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (total &lt; <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="type">int</span> x = rand() % <span class="number">4</span> + <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> y = rand() % <span class="number">4</span> + <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> temp = rand() % <span class="number">6</span> + <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> num = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (temp == <span class="number">1</span>) num = <span class="number">4</span>;</span><br><span class="line">        <span class="keyword">if</span> (!gameMap[x][y]) &#123;</span><br><span class="line">            gameMap[x][y] = num;</span><br><span class="line">            total++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PrintNumber</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (x &lt; <span class="number">10</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;  %d │&quot;</span>, x);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (x &lt; <span class="number">100</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot; %d │&quot;</span>, x);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%4d│&quot;</span>, x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">ShowMap</span><span class="params">()</span> &#123;</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">    Goto(<span class="number">5</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span> (score &gt; best) best = score;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Score: %6d  Best: %6d\n&quot;</span>, score, best);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;      _______________________ \n\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;       ┌────┬────┬────┬────┐\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;       │&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (gameMap[i][j])</span><br><span class="line">                PrintNumber(gameMap[i][j]);</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;    │&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (i &lt;= <span class="number">3</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;       ├────┼────┼────┼────┤\n&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;       └────┴────┴────┴────┘\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;      _______________________ \n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;[Q] Back to menu.&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">UpdateMap</span><span class="params">()</span> &#123;</span><br><span class="line">    Goto(<span class="number">5</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span> (score &gt; best) best = score;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Score: %6d  Best: %6d\n&quot;</span>, score, best);</span><br><span class="line">    Goto(<span class="number">0</span>, <span class="number">3</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">            Goto(<span class="number">3</span> + <span class="number">5</span> * j, i * <span class="number">2</span> + <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">if</span> (gameMap[i][j])</span><br><span class="line">                PrintNumber(gameMap[i][j]);</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;    &quot;</span>);<span class="comment">//4:</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">MoveLeft</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="type">int</span> k = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">2</span>; j &lt;= n; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (gameMap[i][j]) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!gameMap[i][k]) &#123;                      <span class="comment">// gameMap[i,k] is empty</span></span><br><span class="line">                    gameMap[i][k] = gameMap[i][j];</span><br><span class="line">                    gameMap[i][j] = <span class="number">0</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (gameMap[i][k] != gameMap[i][j]) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (k + <span class="number">1</span> != j) &#123;</span><br><span class="line">                        gameMap[i][k + <span class="number">1</span>] = gameMap[i][j];</span><br><span class="line">                        gameMap[i][j] = <span class="number">0</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    k++;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;                                   <span class="comment">//merge:gameMap[i][k] ==gameMap[i][j]</span></span><br><span class="line">                    gameMap[i][k] &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">                    gameMap[i][j] = <span class="number">0</span>;</span><br><span class="line">                    score += gameMap[i][k];</span><br><span class="line">                    k++;                                   <span class="comment">// the number can&#x27;t be merged again</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">MoveRight</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="type">int</span> k = n;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = n - <span class="number">1</span>; j &gt;= <span class="number">1</span>; j--) &#123;</span><br><span class="line">            <span class="keyword">if</span> (gameMap[i][j]) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!gameMap[i][k]) &#123;                      <span class="comment">// gameMap[i,k] is empty</span></span><br><span class="line">                    gameMap[i][k] = gameMap[i][j];</span><br><span class="line">                    gameMap[i][j] = <span class="number">0</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (gameMap[i][k] != gameMap[i][j]) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (k - <span class="number">1</span> != j) &#123;</span><br><span class="line">                        gameMap[i][k - <span class="number">1</span>] = gameMap[i][j];</span><br><span class="line">                        gameMap[i][j] = <span class="number">0</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    k--;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;                                   <span class="comment">//merge:gameMap[i][k] ==gameMap[i][j]</span></span><br><span class="line">                    gameMap[i][k] &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">                    gameMap[i][j] = <span class="number">0</span>;</span><br><span class="line">                    score += gameMap[i][k];</span><br><span class="line">                    k--;                                   <span class="comment">// the number can&#x27;t be merged again</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">MoveUp</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="type">int</span> k = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">2</span>; j &lt;= n; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (gameMap[j][i]) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!gameMap[k][i]) &#123;                      <span class="comment">// gameMap[i,k] is empty</span></span><br><span class="line">                    gameMap[k][i] = gameMap[j][i];</span><br><span class="line">                    gameMap[j][i] = <span class="number">0</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (gameMap[k][i] != gameMap[j][i]) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (k + <span class="number">1</span> != j) &#123;</span><br><span class="line">                        gameMap[k + <span class="number">1</span>][i] = gameMap[j][i];</span><br><span class="line">                        gameMap[j][i] = <span class="number">0</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    k++;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;                                   <span class="comment">//merge:gameMap[i][k] ==gameMap[i][j]</span></span><br><span class="line">                    gameMap[k][i] &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">                    gameMap[j][i] = <span class="number">0</span>;</span><br><span class="line">                    score += gameMap[k][i];</span><br><span class="line">                    k++;                                   <span class="comment">// the number can&#x27;t be merged again</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">MoveDown</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="type">int</span> k = n;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = n - <span class="number">1</span>; j &gt;= <span class="number">1</span>; j--) &#123;</span><br><span class="line">            <span class="keyword">if</span> (gameMap[j][i]) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!gameMap[k][i]) &#123;                      <span class="comment">// gameMap[i,k] is empty</span></span><br><span class="line">                    gameMap[k][i] = gameMap[j][i];</span><br><span class="line">                    gameMap[j][i] = <span class="number">0</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (gameMap[k][i] != gameMap[j][i]) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (k - <span class="number">1</span> != j) &#123;</span><br><span class="line">                        gameMap[k - <span class="number">1</span>][i] = gameMap[j][i];</span><br><span class="line">                        gameMap[j][i] = <span class="number">0</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    k--;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;                                   <span class="comment">// merge:gameMap[i][k] ==gameMap[i][j]</span></span><br><span class="line">                    gameMap[k][i] &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">                    gameMap[j][i] = <span class="number">0</span>;</span><br><span class="line">                    score += gameMap[k][i];</span><br><span class="line">                    k--;                                   <span class="comment">// the number can&#x27;t be merged again</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * check if the player wins or loses the game.</span></span><br><span class="line"><span class="comment"> * @return 1 if win,-1 if lose, 0 if continue</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">CheckGame</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> count_of_zero = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!gameMap[i][j]) count_of_zero++;</span><br><span class="line">            <span class="keyword">if</span> (gameMap[i][j] == <span class="number">2048</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;                                 <span class="comment">// win</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">if</span> (count_of_zero)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;                                         <span class="comment">// continue</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">            <span class="keyword">if</span> (gameMap[i][j] == gameMap[i + <span class="number">1</span>][j]</span><br><span class="line">                || gameMap[i][j] == gameMap[i - <span class="number">1</span>][j]</span><br><span class="line">                || gameMap[i][j] == gameMap[i][j + <span class="number">1</span>]</span><br><span class="line">                || gameMap[i][j] == gameMap[i][j - <span class="number">1</span>])</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;                                 <span class="comment">// continue</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;                                            <span class="comment">// lose</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Game</span><span class="params">(<span class="type">int</span> game_type)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (game_type == <span class="number">1</span>) &#123;</span><br><span class="line">        InitGameMap();   <span class="comment">//new game</span></span><br><span class="line">        have_old_game = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> haveMap = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!haveMap) &#123;</span><br><span class="line">            ShowMap();</span><br><span class="line">            haveMap = <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            UpdateMap();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> state = CheckGame();</span><br><span class="line">        <span class="keyword">if</span> (CheckGame() == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n              You Win!\n&quot;</span>);</span><br><span class="line">            system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">            have_old_game = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (CheckGame() == <span class="number">-1</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n              You Lose!\n&quot;</span>);</span><br><span class="line">            have_old_game = <span class="number">0</span>;</span><br><span class="line">            system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">char</span> type;</span><br><span class="line">        <span class="type">int</span> flag = <span class="number">0</span>;</span><br><span class="line">        type = getch();</span><br><span class="line">        <span class="keyword">switch</span> (type) &#123;</span><br><span class="line">            <span class="keyword">case</span> UP:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;w&#x27;</span>:</span><br><span class="line">                MoveUp();</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> DOWN:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;s&#x27;</span>:</span><br><span class="line">                MoveDown();</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> LEFT:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;a&#x27;</span>:</span><br><span class="line">                MoveLeft();</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> RIGHT:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;d&#x27;</span>:</span><br><span class="line">                MoveRight();</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;q&#x27;</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;Q&#x27;</span>:</span><br><span class="line">                haveMap = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">            <span class="type">int</span> count_of_zero = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">                    <span class="keyword">if</span> (!gameMap[i][j]) count_of_zero++;</span><br><span class="line">            <span class="keyword">if</span> (count_of_zero &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="type">int</span> total = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">while</span> (total &lt; <span class="number">1</span>) &#123;</span><br><span class="line">                    <span class="type">int</span> x = rand() % <span class="number">4</span> + <span class="number">1</span>;</span><br><span class="line">                    <span class="type">int</span> y = rand() % <span class="number">4</span> + <span class="number">1</span>;</span><br><span class="line">                    <span class="type">int</span> temp = rand() % <span class="number">6</span> + <span class="number">1</span>;</span><br><span class="line">                    <span class="type">int</span> num = <span class="number">2</span>;</span><br><span class="line">                    <span class="keyword">if</span> (temp == <span class="number">1</span>) num = <span class="number">4</span>;</span><br><span class="line">                    <span class="keyword">if</span> (!gameMap[x][y]) &#123;</span><br><span class="line">                        gameMap[x][y] = num;</span><br><span class="line">                        total++;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">ShowMenu</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">    <span class="type">int</span> print_X = <span class="number">14</span>;</span><br><span class="line">    <span class="comment">/*Goto(16, 3);</span></span><br><span class="line"><span class="comment">    printf(&quot;2 0 4 8\n&quot;);*/</span></span><br><span class="line">    Goto(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;       ____   ___  _  _    ___  \n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;      |___ \\ / _ \\| || |  ( _ ) \n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;        __) | | | | || |_ / _ \\ \n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;       / __/| |_| |__   _| (_) |\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;      |_____|\\___/   |_|  \\___/ \n&quot;</span>);</span><br><span class="line">    Goto(print_X, <span class="number">7</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;1.New Game\n&quot;</span>);</span><br><span class="line">    Goto(print_X, <span class="number">8</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;2.Old Game\n&quot;</span>);</span><br><span class="line">    Goto(print_X, <span class="number">9</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;3.Exit\n&quot;</span>);</span><br><span class="line">    Goto(print_X - <span class="number">1</span>, <span class="number">6</span> + x);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;&gt;&quot;</span>);</span><br><span class="line">    Goto(<span class="number">3</span>, <span class="number">11</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Please type [UP][DOWN] or [w][s] \nto choose your game.\n   Type [ENTER] to enter the game.&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Menu</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> now_point = <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> last_point = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> haveMenu = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="type">char</span> type;</span><br><span class="line">        <span class="type">int</span> flag = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (!haveMenu) &#123;</span><br><span class="line">            ShowMenu(now_point);</span><br><span class="line">            haveMenu = <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            Goto(<span class="number">14</span> - <span class="number">1</span>, <span class="number">6</span> + now_point);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;&gt;&quot;</span>);</span><br><span class="line">            Goto(<span class="number">14</span> - <span class="number">1</span>, <span class="number">6</span> + last_point);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        type = getch();</span><br><span class="line">        <span class="keyword">switch</span> (type) &#123;</span><br><span class="line">            <span class="keyword">case</span> UP:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;w&#x27;</span>:</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                last_point = now_point;</span><br><span class="line">                now_point = (now_point + <span class="number">1</span>) % <span class="number">3</span> + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> DOWN:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;s&#x27;</span>:</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                last_point = now_point;</span><br><span class="line">                now_point = now_point % <span class="number">3</span> + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> ENTER:</span><br><span class="line">                <span class="keyword">if</span> (now_point &lt;= <span class="number">2</span>) &#123;</span><br><span class="line">                    haveMenu = <span class="number">0</span>;</span><br><span class="line">                    Game(now_point);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>C语言程序设计</tag>
      </tags>
  </entry>
  <entry>
    <title>配置online vscode</title>
    <url>/2022/03/20/online-vscode/</url>
    <content><![CDATA[<p>前段时间购入了一台华为Matepad11，真的非常的香。但是对于经常写代码又不想随时背着笔记本电脑的软院学生而言，遗憾的是，平板上并没有好的代码编辑器。</p>
<p>于是，在云服务器上部署一个online代码编辑器的想法诞生了。</p>
<p>本人用的是大一上学期双十一期间购入的腾讯云轻量应用服务器，最近还免费升级到了4核4G，很赞。</p>
<h3 id="利用docker安装online-vscode"><a href="#利用docker安装online-vscode" class="headerlink" title="利用docker安装online vscode"></a>利用docker安装online vscode</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d --name=code-server \</span><br><span class="line">  -e PUID=1000 \</span><br><span class="line">  -e PGID=1000 \</span><br><span class="line">  -e TZ=Asia/Shanghai \</span><br><span class="line">  -e PASSWORD= \</span><br><span class="line">  -e SUDO_PASSWORD= \</span><br><span class="line">  -p 8080:8443 \</span><br><span class="line">  -v /path/to/appdata/config:/config \</span><br><span class="line">  -v /root/vscode:/vscode \</span><br><span class="line">  --restart unless-stopped \</span><br><span class="line">  lscr.io/linuxserver/code-server</span><br></pre></td></tr></table></figure>
<h3 id="设置腾讯云防火墙"><a href="#设置腾讯云防火墙" class="headerlink" title="设置腾讯云防火墙"></a>设置腾讯云防火墙</h3><p>启动docker以后还是无法在<code>http:IP地址:8080</code>中访问online vscode, 原因是没有在云服务器的防火墙中添加新的规则，开放端口</p>
<p><img src="/images/image-20220320212651339.png" alt="image-20220320212651339"></p>
<p>现在再次访问<code>http:IP地址:8080</code>就可以跳转到登陆界面了，输入之前PASSWORD设置的密码就可以登陆了。</p>
<span id="more"></span>
<p><img src="/images/image-20220320213047933.png" alt="image-20220320213047933"></p>
<h3 id="安装Gcc、Python"><a href="#安装Gcc、Python" class="headerlink" title="安装Gcc、Python"></a>安装Gcc、Python</h3><p>然而，新建的docker里十分干净，连可怜的gcc都没有，于是开始安装。</p>
<ol>
<li><p>首先先进入docker</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it code-server /bin/bash</span><br></pre></td></tr></table></figure>
</li>
<li><p>更新源，安装<code>wget</code>、<code>ping</code>、<code>ifconfig</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get update</span><br><span class="line">apt-get install wget</span><br><span class="line">apt-get install inetutils-ping</span><br><span class="line">apt-get install net-tools</span><br></pre></td></tr></table></figure>
</li>
<li><p>安装gcc</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get install gcc </span><br></pre></td></tr></table></figure>
</li>
<li><p>安装python</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get install python3</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>之后顺便安装了<code>jdk</code>,主要就是敲敲指令，就不多赘述了。</p>
<p>现在我得到了一个可以直接在网页访问的、好用的在线IDE了。</p>
<p><img src="/images/image-20220320214141660.png" alt="image-20220320214141660"></p>
]]></content>
      <tags>
        <tag>云服务器学习生活</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2022/02/23/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>PHP学习笔记</title>
    <url>/2022/10/02/PHPNotes/</url>
    <content><![CDATA[<h1 id="PHP学习笔记（持续更新中…）"><a href="#PHP学习笔记（持续更新中…）" class="headerlink" title="PHP学习笔记（持续更新中…）"></a>PHP学习笔记（持续更新中…）</h1><h2 id="PHP-Basic-Rules"><a href="#PHP-Basic-Rules" class="headerlink" title="PHP Basic Rules"></a>PHP Basic Rules</h2><p>PHP文件默认的文件拓展名<code>.php</code></p>
<h4 id="The-first-PHP-examle"><a href="#The-first-PHP-examle" class="headerlink" title="The first PHP examle"></a>The first PHP examle</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;h1&gt;My first PHP page&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">echo &quot;Hello World!&quot;;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>The function is to print “Hello World!” to Browser.<strong>Each line ends with <code>;</code></strong></p>
</blockquote>
<h4 id="annotate-注释"><a href="#annotate-注释" class="headerlink" title="annotate(注释)"></a>annotate(注释)</h4><p>Like C, PHP have  two ways to annotate.</p>
<ul>
<li>单行注释，use <code>//</code> or <code>#</code></li>
<li>多行注释，use <code>/*   */</code></li>
</ul>
<h4 id="Variables"><a href="#Variables" class="headerlink" title="Variables"></a>Variables</h4><ul>
<li>in PHP, <strong>variable must begin with <code>$</code></strong></li>
<li>Variable names are <strong>case-sensitive</strong>(<code>$a</code> and <code>$A</code> are <strong>different</strong> variables)</li>
<li>Other rules of name are the same as C language</li>
</ul>
<span id="more"></span>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$text</span>=<span class="string">&quot;Hello world!&quot;</span>;</span><br><span class="line"><span class="variable">$a</span>=<span class="number">1</span>;</span><br><span class="line"><span class="variable">$b</span>=<span class="number">2.5</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>We notice that PHP is <strong>Implicit type conversion</strong>(<u>弱类型定义语言</u>)</p>
<p>PHP 有四种不同的变量作用域：</p>
<ul>
<li>local</li>
<li>global</li>
<li>static</li>
<li>parameter</li>
</ul>
<p>If we want to visit global variables in function, we must use <strong><code>global</code></strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$x</span> = <span class="number">1</span>;</span><br><span class="line"><span class="variable">$y</span> = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sumOfTwo</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$x</span>, <span class="variable">$y</span>;</span><br><span class="line">    <span class="variable">$x</span> = <span class="variable">$x</span> + <span class="variable">$y</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">sumOfTwo</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$x</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>PHP stores all global variable in an array named $GLOBALS[index], <code>index</code> is the name of variable. It can be visited in function.</p>
</blockquote>
<p>When a function completes,  it’s all variables will be delete. However, sometimes you hope the variable can be saved. To do it, you can use <strong><code>static</code></strong> when declaring the variable.</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="built_in">static</span> <span class="variable">$x</span>=<span class="number">0</span>;</span><br></pre></td></tr></table></figure>
<p><u>$x is still a local variable!</u></p>
<h4 id="Echo"><a href="#Echo" class="headerlink" title="Echo"></a>Echo</h4><ol>
<li><p>multiple parameter</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Hello world!&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;This is &quot;</span>, <span class="string">&quot;a string,&quot;</span>, <span class="string">&quot;which use &quot;</span>, <span class="string">&quot;multiple &quot;</span>, <span class="string">&quot;parameter.&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>With variables</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="string">&quot;在 <span class="subst">$txt2</span> 学习 PHP &quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;我车的品牌是 <span class="subst">&#123;$cars[0]&#125;</span>&quot;</span>;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p><strong>Difference between <code>echo</code> and <code>print</code></strong></p>
<ul>
<li>echo - 可以输出<strong>一个或多个</strong>字符串</li>
<li>print - 只允许输出<strong>一个</strong>字符串，<strong>返回值总为 1</strong></li>
<li>其他方面相似，都可以输出<strong>with variables</strong></li>
</ul>
<p><strong>Tips：</strong><code>echo</code> is faster than <code>print</code>， <code>echo</code> have no return value ，<code>print</code> return 1。</p>
<h4 id="Data-Type"><a href="#Data-Type" class="headerlink" title="Data Type"></a>Data Type</h4><ul>
<li>String  -&gt; We can put <strong>any word in <code>&#39;&#39;</code> or <code>&quot;&quot;</code></strong></li>
<li>Integer -&gt; 十六进制（ 以 0x 为前缀）或八进制（前缀为 0）</li>
<li>Float</li>
<li>Boolean(<code>true</code>,  <code>false</code>)</li>
<li>Array</li>
<li>Object（对象）</li>
<li>NULL（空值）</li>
<li>Resource（资源类型）</li>
</ul>
<h5 id="Array"><a href="#Array" class="headerlink" title="Array"></a>Array</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$cars</span>=<span class="keyword">array</span>(<span class="string">&quot;Aito&quot;</span>,<span class="string">&quot;BMW&quot;</span>);  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h5 id="Object"><a href="#Object" class="headerlink" title="Object"></a>Object</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Car</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$color</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$color</span>=<span class="string">&quot;green&quot;</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;color = <span class="variable">$color</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">what_color</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;color;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h5 id="Resource"><a href="#Resource" class="headerlink" title="Resource"></a>Resource</h5><p>resource is a special variable, which stores a refrence to outer resource</p>
<p>(link to database、open the file…)</p>
<h4 id="Comparison-of-data"><a href="#Comparison-of-data" class="headerlink" title="Comparison of data"></a>Comparison of data</h4><ul>
<li>Loose comparison：use<code>==</code>, only compare the <u><strong>value</strong></u> of variables</li>
<li>Strict comparison：use<code>===</code>，not only <strong><u>value</u></strong>,but also <u><strong>type</strong></u>。</li>
</ul>
<p><strong><u>字符串在进行比较时，会转化成数字进行数学比较！</u></strong></p>
<h4 id="Const"><a href="#Const" class="headerlink" title="Const"></a>Const</h4><p>use<code>define()</code> ：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">bool</span> <span class="title function_ invoke__">define</span> ( <span class="keyword">string</span> <span class="variable">$name</span> , <span class="keyword">mixed</span> <span class="variable">$value</span> [, <span class="keyword">bool</span> <span class="variable">$case_insensitive</span> = <span class="literal">false</span> ] )</span><br></pre></td></tr></table></figure>
<p>three parameter:</p>
<ul>
<li>name</li>
<li>value</li>
<li><strong>case_insensitive</strong> ：optional. If  <strong>case_insensitive</strong> is TRUE，The constant is not case sensitive. <u>The default is case-sensitive</u>.</li>
</ul>
<p>Example:</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&quot;BAIDU&quot;</span>, <span class="string">&quot;www.baidu.com&quot;</span>);</span><br></pre></td></tr></table></figure>
<h4 id="String"><a href="#String" class="headerlink" title="String"></a>String</h4><p><strong>并置运算符<code>.</code></strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$txt1</span>=<span class="string">&quot;Hello world!&quot;</span>;</span><br><span class="line"><span class="variable">$txt2</span>=<span class="string">&quot;What a nice day!&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$txt1</span> . <span class="string">&quot; &quot;</span> . <span class="variable">$txt2</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><code>.</code> in PHP is similar to <code>+</code> in C++(string)</p>
</blockquote>
<p><strong>Other string functions:</strong></p>
<ol>
<li><code>strlen()</code>, return the length of string</li>
<li><code>strpos($s1, $s2)</code>, return the <code>$s2</code> ‘s position in <code>$s1</code></li>
</ol>
<p>(String subscripts start at 0)</p>
<h2 id="Structured-programming"><a href="#Structured-programming" class="headerlink" title="Structured programming"></a>Structured programming</h2><h4 id="operator"><a href="#operator" class="headerlink" title="operator"></a>operator</h4><ul>
<li><code>+</code>,<code>-</code>,<code>*</code>,<code>/</code>,<code>%</code>,<code>~</code> is like C</li>
<li><p>intdiv(10, 3) === 3</p>
</li>
<li><p>we can use <code>x += y</code> , <code>x++</code></p>
</li>
<li>both <code>!=</code> and <code>&lt;&gt;</code> is legal</li>
<li><code>x!==y</code> means <u>如果 x 不等于 y，或它们类型不相同，则返回 true</u></li>
<li>both <code>and</code> and <code>&amp;&amp;</code> is legal(优先级不同)</li>
<li><code>&lt;&lt;</code>,<code>&gt;&gt;</code></li>
</ul>
<h4 id="If-else-switch"><a href="#If-else-switch" class="headerlink" title="If-else, switch"></a>If-else, switch</h4><p>In php, <code>if-else</code> and <code>switch</code> are the same as that in C/C++.</p>
<p>The only difference is php provide <code>elseif</code>.</p>
<p>Example:</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$t</span>=<span class="title function_ invoke__">date</span>(<span class="string">&quot;H&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$t</span>&lt;<span class="string">&quot;10&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Have a good morning!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span> (<span class="variable">$t</span>&lt;<span class="string">&quot;20&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Have a good day!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Have a good night!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="For、While"><a href="#For、While" class="headerlink" title="For、While"></a>For、While</h4><h5 id="For"><a href="#For" class="headerlink" title="For"></a>For</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">1</span>; <span class="variable">$i</span> &lt;= <span class="number">10</span>; <span class="variable">$i</span>++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;数字为 &quot;</span> . <span class="variable">$i</span> . PHP_EOL;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h5 id="For-each"><a href="#For-each" class="headerlink" title="For each"></a>For each</h5><p><strong>Format 1:<code>foreach ($array as $value)&#123;&#125;</code></strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$x</span> = <span class="keyword">array</span>(<span class="string">&quot;Google&quot;</span>,<span class="string">&quot;Baidu&quot;</span>,<span class="string">&quot;Bing&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$x</span> <span class="keyword">as</span> <span class="variable">$value</span>)  <span class="comment">// x is the name of array</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$value</span> . PHP_EOL;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>Format 2:<code>foreach ($array as $key =&gt; $value)&#123;&#125;</code></strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$x</span> = <span class="keyword">array</span>(<span class="number">1</span>=&gt;<span class="string">&quot;Google&quot;</span>, <span class="number">2</span>=&gt;<span class="string">&quot;Baidu&quot;</span>, <span class="number">3</span>=&gt;<span class="string">&quot;Bing&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$x</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;key  为 &quot;</span> . <span class="variable">$key</span> . <span class="string">&quot;，对应的 value 为 &quot;</span>. <span class="variable">$value</span> . PHP_EOL;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h5 id="While-Do-While"><a href="#While-Do-While" class="headerlink" title="While/Do While"></a>While/Do While</h5><p>In php, <code>while</code> and <code>do while</code> are the same as that in C/C++.</p>
<p><strong>Format:<code>while(condition)&#123;// some codes&#125;</code></strong></p>
<h4 id="Array-1"><a href="#Array-1" class="headerlink" title="Array"></a>Array</h4><h4 id="Function"><a href="#Function" class="headerlink" title="Function"></a>Function</h4><p>To be continued…</p>
]]></content>
      <tags>
        <tag>编程语言</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年第一次参加高额奖学金答辩</title>
    <url>/2022/09/28/scholarship/</url>
    <content><![CDATA[<p>2022年9月27日，我很高兴也很荣幸能够参加高额奖学金的答辩。感谢学校和同学对我一年学习工作的认可。</p>
<p>在这次答辩中我也真正看到面面俱到的大佬们，无论是党团学习、志愿服务、团学工作、课程成绩、科研创新、社会实践还是技术积累，都取得了很优秀的成绩。</p>
<p>我还得继续努力，多参与活动与比赛，积极向党组织靠拢。</p>
<p>（花旗杯、微信小程序应用开发赛等我得考虑考虑了）</p>
<p><img src="/images/picture1.jpg" alt="picture1"></p>
]]></content>
      <tags>
        <tag>学校生活</tag>
      </tags>
  </entry>
</search>

<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>大一上C语言小作业——2048小游戏</title>
    <url>/2022/02/24/2048/</url>
    <content><![CDATA[<h3 id="大一上C语言小作业——2048小游戏"><a href="#大一上C语言小作业——2048小游戏" class="headerlink" title="大一上C语言小作业——2048小游戏"></a>大一上C语言小作业——2048小游戏</h3><p>项目要求：使用C语言编写2048小游戏</p>
<h4 id="界面设置部分"><a href="#界面设置部分" class="headerlink" title="界面设置部分"></a>界面设置部分</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">HideCursor</span><span class="params">()</span> &#123;            <span class="comment">//隐藏光标</span></span><br><span class="line">    CONSOLE_CURSOR_INFO curInfo;</span><br><span class="line">    curInfo.dwSize = <span class="number">1</span>;</span><br><span class="line">    curInfo.bVisible = FALSE;</span><br><span class="line">    HANDLE handle = GetStdHandle(STD_OUTPUT_HANDLE);</span><br><span class="line">    SetConsoleCursorInfo(handle, &amp;curInfo);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Goto</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> &#123;       <span class="comment">//光标移动到(x,y)位置</span></span><br><span class="line">    COORD pos;</span><br><span class="line">    pos.X = x;</span><br><span class="line">    pos.Y = y;</span><br><span class="line">    HANDLE handle = GetStdHandle(STD_OUTPUT_HANDLE);</span><br><span class="line">    SetConsoleCursorPosition(handle, pos);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PreWork</span><span class="params">()</span> &#123;</span><br><span class="line">    system(<span class="string">&quot;title 2048&quot;</span>);        <span class="comment">//窗口标题为2048</span></span><br><span class="line">    system(<span class="string">&quot;mode con cols=40 lines=21&quot;</span>);  <span class="comment">//窗口大小</span></span><br><span class="line">    system(<span class="string">&quot;chcp 65001 &gt; nul&quot;</span>);  <span class="comment">//中文支持</span></span><br><span class="line">    HideCursor();                <span class="comment">//隐藏光标</span></span><br><span class="line">    CONSOLE_FONT_INFOEX cfi;</span><br><span class="line">    cfi.cbSize = <span class="keyword">sizeof</span> cfi;</span><br><span class="line">    cfi.nFont = <span class="number">0</span>;</span><br><span class="line">    cfi.dwFontSize.X = <span class="number">15</span>;</span><br><span class="line">    cfi.dwFontSize.Y = <span class="number">30</span>;</span><br><span class="line">    cfi.FontFamily = FF_DONTCARE;</span><br><span class="line">    cfi.FontWeight = FW_NORMAL;</span><br><span class="line">    SetCurrentConsoleFontEx(GetStdHandle(STD_OUTPUT_HANDLE), FALSE, &amp;cfi);</span><br><span class="line">    srand((<span class="type">unsigned</span>) time(<span class="literal">NULL</span>));  <span class="comment">//随机函数种子</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="游戏初始化"><a href="#游戏初始化" class="headerlink" title="游戏初始化"></a>游戏初始化</h4><p>游戏”棋盘“初始化要做的事：</p>
<ul>
<li>清空“棋盘”</li>
<li>生成两个数（2或4），其中生成2的概率较大</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">InitGameMap</span><span class="params">()</span> &#123;</span><br><span class="line">    score = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">memset</span>(gameMap, <span class="number">-1</span>, <span class="keyword">sizeof</span>(gameMap));</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">            gameMap[i][j] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> total = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (total &lt; <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="type">int</span> x = rand() % <span class="number">4</span> + <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> y = rand() % <span class="number">4</span> + <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> temp = rand() % <span class="number">6</span> + <span class="number">1</span>;  <span class="comment">//temp 的范围是[1, 6]</span></span><br><span class="line">        <span class="type">int</span> num = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (temp == <span class="number">1</span>) num = <span class="number">4</span>;     <span class="comment">//设置1/6的概率生成数字4</span></span><br><span class="line">        <span class="keyword">if</span> (!gameMap[x][y]) &#123;</span><br><span class="line">            gameMap[x][y] = num;</span><br><span class="line">            total++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<h4 id="移动"><a href="#移动" class="headerlink" title="移动"></a>移动</h4><p>2048游戏中最关键的就是处理按下方向键后，棋盘中数字的移动。以向左移动为例：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">MoveLeft</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;  <span class="comment">//处理第i行</span></span><br><span class="line">        <span class="type">int</span> k = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">2</span>; j &lt;= n; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (gameMap[i][j]) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!gameMap[i][k]) &#123;                      <span class="comment">// gameMap[i,k] is empty</span></span><br><span class="line">                    gameMap[i][k] = gameMap[i][j];</span><br><span class="line">                    gameMap[i][j] = <span class="number">0</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (gameMap[i][k] != gameMap[i][j]) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (k + <span class="number">1</span> != j) &#123;</span><br><span class="line">                        gameMap[i][k + <span class="number">1</span>] = gameMap[i][j];</span><br><span class="line">                        gameMap[i][j] = <span class="number">0</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    k++;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;                                   <span class="comment">//merge:gameMap[i][k] ==gameMap[i][j]</span></span><br><span class="line">                    gameMap[i][k] &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">                    gameMap[i][j] = <span class="number">0</span>;</span><br><span class="line">                    score += gameMap[i][k];</span><br><span class="line">                    k++;                                   <span class="comment">// the number can&#x27;t be merged again</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>其余移动原理相同，不再赘述。</p>
<h4 id="判断游戏输赢"><a href="#判断游戏输赢" class="headerlink" title="判断游戏输赢"></a>判断游戏输赢</h4><p><code>CheckGame()</code>函数用来判断游戏输赢：</p>
<ul>
<li>若棋盘上有数字达到2048则<strong>胜利</strong></li>
<li>若棋盘已满且无法移动（任何两个相邻的数都不相同）则<strong>失败</strong></li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">CheckGame</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> count_of_zero = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!gameMap[i][j]) count_of_zero++;</span><br><span class="line">            <span class="keyword">if</span> (gameMap[i][j] == <span class="number">2048</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;                                 <span class="comment">// win</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">if</span> (count_of_zero)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;                                         <span class="comment">// continue</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">            <span class="keyword">if</span> (gameMap[i][j] == gameMap[i + <span class="number">1</span>][j]</span><br><span class="line">                || gameMap[i][j] == gameMap[i - <span class="number">1</span>][j]</span><br><span class="line">                || gameMap[i][j] == gameMap[i][j + <span class="number">1</span>]</span><br><span class="line">                || gameMap[i][j] == gameMap[i][j - <span class="number">1</span>])</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;                                 <span class="comment">// continue</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;                                            <span class="comment">// lose</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="打印棋盘-amp-更新棋盘"><a href="#打印棋盘-amp-更新棋盘" class="headerlink" title="打印棋盘&amp;更新棋盘"></a>打印棋盘&amp;更新棋盘</h4><ul>
<li>尽量减少<code>system(&quot;pause&quot;)</code>语句的运用，能减少屏幕闪烁的情况。</li>
<li><code>PrintNumber</code>函数用来格式化地打印格子中的数</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">PrintNumber</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (x &lt; <span class="number">10</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;  %d │&quot;</span>, x);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (x &lt; <span class="number">100</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot; %d │&quot;</span>, x);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%4d│&quot;</span>, x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">ShowMap</span><span class="params">()</span> &#123;</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">    Goto(<span class="number">5</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span> (score &gt; best) best = score;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Score: %6d  Best: %6d\n&quot;</span>, score, best);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;      _______________________ \n\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;       ┌────┬────┬────┬────┐\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;       │&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (gameMap[i][j])</span><br><span class="line">                PrintNumber(gameMap[i][j]);</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;    │&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (i &lt;= <span class="number">3</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;       ├────┼────┼────┼────┤\n&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;       └────┴────┴────┴────┘\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;      _______________________ \n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;[Q] Back to menu.&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">UpdateMap</span><span class="params">()</span> &#123;  <span class="comment">//棋盘不用重新打印</span></span><br><span class="line">    Goto(<span class="number">5</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span> (score &gt; best) best = score;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Score: %6d  Best: %6d\n&quot;</span>, score, best);</span><br><span class="line">    Goto(<span class="number">0</span>, <span class="number">3</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">            Goto(<span class="number">3</span> + <span class="number">5</span> * j, i * <span class="number">2</span> + <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">if</span> (gameMap[i][j])</span><br><span class="line">                PrintNumber(gameMap[i][j]);</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;    &quot;</span>);<span class="comment">//4:</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="游戏进行"><a href="#游戏进行" class="headerlink" title="游戏进行"></a>游戏进行</h4><ul>
<li>判断是新游戏模式还是旧游戏模式，如果是新游戏，则要初始化棋盘</li>
<li>处理键盘输入，进行数字的移动并生成新的数字</li>
<li>每次判断游戏是否结束</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">Game</span><span class="params">(<span class="type">int</span> game_type)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (game_type == <span class="number">1</span>) &#123;</span><br><span class="line">        InitGameMap();   <span class="comment">//new game</span></span><br><span class="line">        have_old_game = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> haveMap = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!haveMap) &#123;</span><br><span class="line">            ShowMap();</span><br><span class="line">            haveMap = <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            UpdateMap();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> state = CheckGame();</span><br><span class="line">        <span class="keyword">if</span> (CheckGame() == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n              You Win!\n&quot;</span>);</span><br><span class="line">            system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">            have_old_game = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (CheckGame() == <span class="number">-1</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n              You Lose!\n&quot;</span>);</span><br><span class="line">            have_old_game = <span class="number">0</span>;</span><br><span class="line">            system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">char</span> type;</span><br><span class="line">        <span class="type">int</span> flag = <span class="number">0</span>;</span><br><span class="line">        type = getch();</span><br><span class="line">        <span class="keyword">switch</span> (type) &#123;</span><br><span class="line">            <span class="keyword">case</span> UP:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;w&#x27;</span>:</span><br><span class="line">                MoveUp();</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> DOWN:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;s&#x27;</span>:</span><br><span class="line">                MoveDown();</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> LEFT:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;a&#x27;</span>:</span><br><span class="line">                MoveLeft();</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> RIGHT:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;d&#x27;</span>:</span><br><span class="line">                MoveRight();</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;q&#x27;</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;Q&#x27;</span>:</span><br><span class="line">                haveMap = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">            <span class="type">int</span> count_of_zero = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">                    <span class="keyword">if</span> (!gameMap[i][j]) count_of_zero++;</span><br><span class="line">            <span class="keyword">if</span> (count_of_zero &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="type">int</span> total = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">while</span> (total &lt; <span class="number">1</span>) &#123;</span><br><span class="line">                    <span class="type">int</span> x = rand() % <span class="number">4</span> + <span class="number">1</span>;</span><br><span class="line">                    <span class="type">int</span> y = rand() % <span class="number">4</span> + <span class="number">1</span>;</span><br><span class="line">                    <span class="type">int</span> temp = rand() % <span class="number">6</span> + <span class="number">1</span>;</span><br><span class="line">                    <span class="type">int</span> num = <span class="number">2</span>;</span><br><span class="line">                    <span class="keyword">if</span> (temp == <span class="number">1</span>) num = <span class="number">4</span>;</span><br><span class="line">                    <span class="keyword">if</span> (!gameMap[x][y]) &#123;</span><br><span class="line">                        gameMap[x][y] = num;</span><br><span class="line">                        total++;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="菜单界面"><a href="#菜单界面" class="headerlink" title="菜单界面"></a>菜单界面</h4><p>菜单界面<code>Menu()</code>要处理通过上下键或[W][S]键选择模式。<code>ShowMenu(x)</code>函数用来打印当前选择了<script type="math/tex">x</script>号模式时的菜单界面。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">ShowMenu</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">    <span class="type">int</span> print_X = <span class="number">14</span>;</span><br><span class="line">    Goto(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;       ____   ___  _  _    ___  \n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;      |___ \\ / _ \\| || |  ( _ ) \n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;        __) | | | | || |_ / _ \\ \n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;       / __/| |_| |__   _| (_) |\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;      |_____|\\___/   |_|  \\___/ \n&quot;</span>);</span><br><span class="line">    Goto(print_X, <span class="number">7</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;1.New Game\n&quot;</span>);</span><br><span class="line">    Goto(print_X, <span class="number">8</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;2.Old Game\n&quot;</span>);</span><br><span class="line">    Goto(print_X, <span class="number">9</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;3.Exit\n&quot;</span>);</span><br><span class="line">    Goto(print_X - <span class="number">1</span>, <span class="number">6</span> + x);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;&gt;&quot;</span>);</span><br><span class="line">    Goto(<span class="number">3</span>, <span class="number">11</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Please type [UP][DOWN] or [w][s] \nto choose your game.\n   Type [ENTER] to enter the game.&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Menu</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> now_point = <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> last_point = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> haveMenu = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="type">char</span> type;</span><br><span class="line">        <span class="type">int</span> flag = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (!haveMenu) &#123;</span><br><span class="line">            ShowMenu(now_point);</span><br><span class="line">            haveMenu = <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            Goto(<span class="number">14</span> - <span class="number">1</span>, <span class="number">6</span> + now_point);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;&gt;&quot;</span>);</span><br><span class="line">            Goto(<span class="number">14</span> - <span class="number">1</span>, <span class="number">6</span> + last_point);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        type = getch();</span><br><span class="line">        <span class="keyword">switch</span> (type) &#123;</span><br><span class="line">            <span class="keyword">case</span> UP:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;w&#x27;</span>:</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                last_point = now_point;</span><br><span class="line">                now_point = (now_point + <span class="number">1</span>) % <span class="number">3</span> + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> DOWN:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;s&#x27;</span>:</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                last_point = now_point;</span><br><span class="line">                now_point = now_point % <span class="number">3</span> + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> ENTER:</span><br><span class="line">                <span class="keyword">if</span> (now_point &lt;= <span class="number">2</span>) &#123;</span><br><span class="line">                    haveMenu = <span class="number">0</span>;</span><br><span class="line">                    Game(now_point);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;conio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ROW 6</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> COL 6</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAP_ROW 40</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAP_COL 30</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> UP 72</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DOWN 80</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LEFT 75</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> RIGHT 77</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ENTER 13</span></span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> n = <span class="number">4</span>;</span><br><span class="line"><span class="type">int</span> score = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> best = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> gameMap[ROW][COL];</span><br><span class="line"><span class="type">int</span> have_old_game = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">HideCursor</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Goto</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">InitGameMap</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PreWork</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">ShowMap</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">UpdateMap</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Game</span><span class="params">(<span class="type">int</span> game_type)</span>;     <span class="comment">// begin the game</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">MoveLeft</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">MoveRight</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">MoveUp</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">MoveDown</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">ShowMenu</span><span class="params">(<span class="type">int</span> x)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Menu</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PrintNumber</span><span class="params">(<span class="type">int</span> x)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">CheckGame</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    PreWork();</span><br><span class="line">    Menu();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">HideCursor</span><span class="params">()</span> &#123;</span><br><span class="line">    CONSOLE_CURSOR_INFO curInfo;</span><br><span class="line">    curInfo.dwSize = <span class="number">1</span>;</span><br><span class="line">    curInfo.bVisible = FALSE;</span><br><span class="line">    HANDLE handle = GetStdHandle(STD_OUTPUT_HANDLE);</span><br><span class="line">    SetConsoleCursorInfo(handle, &amp;curInfo);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Goto</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> &#123;</span><br><span class="line">    COORD pos;</span><br><span class="line">    pos.X = x;</span><br><span class="line">    pos.Y = y;</span><br><span class="line">    HANDLE handle = GetStdHandle(STD_OUTPUT_HANDLE);</span><br><span class="line">    SetConsoleCursorPosition(handle, pos);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PreWork</span><span class="params">()</span> &#123;</span><br><span class="line">    system(<span class="string">&quot;title 2048&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;mode con cols=40 lines=21&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;chcp 65001 &gt; nul&quot;</span>);  <span class="comment">//Chinese</span></span><br><span class="line">    HideCursor();</span><br><span class="line">    CONSOLE_FONT_INFOEX cfi;</span><br><span class="line">    cfi.cbSize = <span class="keyword">sizeof</span> cfi;</span><br><span class="line">    cfi.nFont = <span class="number">0</span>;</span><br><span class="line">    cfi.dwFontSize.X = <span class="number">15</span>;</span><br><span class="line">    cfi.dwFontSize.Y = <span class="number">30</span>;</span><br><span class="line">    cfi.FontFamily = FF_DONTCARE;</span><br><span class="line">    cfi.FontWeight = FW_NORMAL;</span><br><span class="line">    SetCurrentConsoleFontEx(GetStdHandle(STD_OUTPUT_HANDLE), FALSE, &amp;cfi);</span><br><span class="line">    srand((<span class="type">unsigned</span>) time(<span class="literal">NULL</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">InitGameMap</span><span class="params">()</span> &#123;</span><br><span class="line">    score = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">memset</span>(gameMap, <span class="number">-1</span>, <span class="keyword">sizeof</span>(gameMap));</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">            gameMap[i][j] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> total = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (total &lt; <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="type">int</span> x = rand() % <span class="number">4</span> + <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> y = rand() % <span class="number">4</span> + <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> temp = rand() % <span class="number">6</span> + <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> num = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (temp == <span class="number">1</span>) num = <span class="number">4</span>;</span><br><span class="line">        <span class="keyword">if</span> (!gameMap[x][y]) &#123;</span><br><span class="line">            gameMap[x][y] = num;</span><br><span class="line">            total++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PrintNumber</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (x &lt; <span class="number">10</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;  %d │&quot;</span>, x);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (x &lt; <span class="number">100</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot; %d │&quot;</span>, x);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%4d│&quot;</span>, x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">ShowMap</span><span class="params">()</span> &#123;</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">    Goto(<span class="number">5</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span> (score &gt; best) best = score;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Score: %6d  Best: %6d\n&quot;</span>, score, best);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;      _______________________ \n\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;       ┌────┬────┬────┬────┐\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;       │&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (gameMap[i][j])</span><br><span class="line">                PrintNumber(gameMap[i][j]);</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;    │&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (i &lt;= <span class="number">3</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;       ├────┼────┼────┼────┤\n&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;       └────┴────┴────┴────┘\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;      _______________________ \n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;[Q] Back to menu.&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">UpdateMap</span><span class="params">()</span> &#123;</span><br><span class="line">    Goto(<span class="number">5</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span> (score &gt; best) best = score;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Score: %6d  Best: %6d\n&quot;</span>, score, best);</span><br><span class="line">    Goto(<span class="number">0</span>, <span class="number">3</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">            Goto(<span class="number">3</span> + <span class="number">5</span> * j, i * <span class="number">2</span> + <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">if</span> (gameMap[i][j])</span><br><span class="line">                PrintNumber(gameMap[i][j]);</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;    &quot;</span>);<span class="comment">//4:</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">MoveLeft</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="type">int</span> k = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">2</span>; j &lt;= n; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (gameMap[i][j]) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!gameMap[i][k]) &#123;                      <span class="comment">// gameMap[i,k] is empty</span></span><br><span class="line">                    gameMap[i][k] = gameMap[i][j];</span><br><span class="line">                    gameMap[i][j] = <span class="number">0</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (gameMap[i][k] != gameMap[i][j]) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (k + <span class="number">1</span> != j) &#123;</span><br><span class="line">                        gameMap[i][k + <span class="number">1</span>] = gameMap[i][j];</span><br><span class="line">                        gameMap[i][j] = <span class="number">0</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    k++;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;                                   <span class="comment">//merge:gameMap[i][k] ==gameMap[i][j]</span></span><br><span class="line">                    gameMap[i][k] &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">                    gameMap[i][j] = <span class="number">0</span>;</span><br><span class="line">                    score += gameMap[i][k];</span><br><span class="line">                    k++;                                   <span class="comment">// the number can&#x27;t be merged again</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">MoveRight</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="type">int</span> k = n;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = n - <span class="number">1</span>; j &gt;= <span class="number">1</span>; j--) &#123;</span><br><span class="line">            <span class="keyword">if</span> (gameMap[i][j]) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!gameMap[i][k]) &#123;                      <span class="comment">// gameMap[i,k] is empty</span></span><br><span class="line">                    gameMap[i][k] = gameMap[i][j];</span><br><span class="line">                    gameMap[i][j] = <span class="number">0</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (gameMap[i][k] != gameMap[i][j]) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (k - <span class="number">1</span> != j) &#123;</span><br><span class="line">                        gameMap[i][k - <span class="number">1</span>] = gameMap[i][j];</span><br><span class="line">                        gameMap[i][j] = <span class="number">0</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    k--;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;                                   <span class="comment">//merge:gameMap[i][k] ==gameMap[i][j]</span></span><br><span class="line">                    gameMap[i][k] &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">                    gameMap[i][j] = <span class="number">0</span>;</span><br><span class="line">                    score += gameMap[i][k];</span><br><span class="line">                    k--;                                   <span class="comment">// the number can&#x27;t be merged again</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">MoveUp</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="type">int</span> k = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">2</span>; j &lt;= n; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (gameMap[j][i]) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!gameMap[k][i]) &#123;                      <span class="comment">// gameMap[i,k] is empty</span></span><br><span class="line">                    gameMap[k][i] = gameMap[j][i];</span><br><span class="line">                    gameMap[j][i] = <span class="number">0</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (gameMap[k][i] != gameMap[j][i]) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (k + <span class="number">1</span> != j) &#123;</span><br><span class="line">                        gameMap[k + <span class="number">1</span>][i] = gameMap[j][i];</span><br><span class="line">                        gameMap[j][i] = <span class="number">0</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    k++;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;                                   <span class="comment">//merge:gameMap[i][k] ==gameMap[i][j]</span></span><br><span class="line">                    gameMap[k][i] &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">                    gameMap[j][i] = <span class="number">0</span>;</span><br><span class="line">                    score += gameMap[k][i];</span><br><span class="line">                    k++;                                   <span class="comment">// the number can&#x27;t be merged again</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">MoveDown</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="type">int</span> k = n;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = n - <span class="number">1</span>; j &gt;= <span class="number">1</span>; j--) &#123;</span><br><span class="line">            <span class="keyword">if</span> (gameMap[j][i]) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!gameMap[k][i]) &#123;                      <span class="comment">// gameMap[i,k] is empty</span></span><br><span class="line">                    gameMap[k][i] = gameMap[j][i];</span><br><span class="line">                    gameMap[j][i] = <span class="number">0</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (gameMap[k][i] != gameMap[j][i]) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (k - <span class="number">1</span> != j) &#123;</span><br><span class="line">                        gameMap[k - <span class="number">1</span>][i] = gameMap[j][i];</span><br><span class="line">                        gameMap[j][i] = <span class="number">0</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    k--;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;                                   <span class="comment">// merge:gameMap[i][k] ==gameMap[i][j]</span></span><br><span class="line">                    gameMap[k][i] &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">                    gameMap[j][i] = <span class="number">0</span>;</span><br><span class="line">                    score += gameMap[k][i];</span><br><span class="line">                    k--;                                   <span class="comment">// the number can&#x27;t be merged again</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * check if the player wins or loses the game.</span></span><br><span class="line"><span class="comment"> * @return 1 if win,-1 if lose, 0 if continue</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">CheckGame</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> count_of_zero = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!gameMap[i][j]) count_of_zero++;</span><br><span class="line">            <span class="keyword">if</span> (gameMap[i][j] == <span class="number">2048</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;                                 <span class="comment">// win</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">if</span> (count_of_zero)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;                                         <span class="comment">// continue</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">            <span class="keyword">if</span> (gameMap[i][j] == gameMap[i + <span class="number">1</span>][j]</span><br><span class="line">                || gameMap[i][j] == gameMap[i - <span class="number">1</span>][j]</span><br><span class="line">                || gameMap[i][j] == gameMap[i][j + <span class="number">1</span>]</span><br><span class="line">                || gameMap[i][j] == gameMap[i][j - <span class="number">1</span>])</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;                                 <span class="comment">// continue</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;                                            <span class="comment">// lose</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Game</span><span class="params">(<span class="type">int</span> game_type)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (game_type == <span class="number">1</span>) &#123;</span><br><span class="line">        InitGameMap();   <span class="comment">//new game</span></span><br><span class="line">        have_old_game = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> haveMap = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!haveMap) &#123;</span><br><span class="line">            ShowMap();</span><br><span class="line">            haveMap = <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            UpdateMap();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> state = CheckGame();</span><br><span class="line">        <span class="keyword">if</span> (CheckGame() == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n              You Win!\n&quot;</span>);</span><br><span class="line">            system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">            have_old_game = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (CheckGame() == <span class="number">-1</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n              You Lose!\n&quot;</span>);</span><br><span class="line">            have_old_game = <span class="number">0</span>;</span><br><span class="line">            system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">char</span> type;</span><br><span class="line">        <span class="type">int</span> flag = <span class="number">0</span>;</span><br><span class="line">        type = getch();</span><br><span class="line">        <span class="keyword">switch</span> (type) &#123;</span><br><span class="line">            <span class="keyword">case</span> UP:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;w&#x27;</span>:</span><br><span class="line">                MoveUp();</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> DOWN:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;s&#x27;</span>:</span><br><span class="line">                MoveDown();</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> LEFT:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;a&#x27;</span>:</span><br><span class="line">                MoveLeft();</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> RIGHT:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;d&#x27;</span>:</span><br><span class="line">                MoveRight();</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;q&#x27;</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;Q&#x27;</span>:</span><br><span class="line">                haveMap = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">            <span class="type">int</span> count_of_zero = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">                    <span class="keyword">if</span> (!gameMap[i][j]) count_of_zero++;</span><br><span class="line">            <span class="keyword">if</span> (count_of_zero &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="type">int</span> total = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">while</span> (total &lt; <span class="number">1</span>) &#123;</span><br><span class="line">                    <span class="type">int</span> x = rand() % <span class="number">4</span> + <span class="number">1</span>;</span><br><span class="line">                    <span class="type">int</span> y = rand() % <span class="number">4</span> + <span class="number">1</span>;</span><br><span class="line">                    <span class="type">int</span> temp = rand() % <span class="number">6</span> + <span class="number">1</span>;</span><br><span class="line">                    <span class="type">int</span> num = <span class="number">2</span>;</span><br><span class="line">                    <span class="keyword">if</span> (temp == <span class="number">1</span>) num = <span class="number">4</span>;</span><br><span class="line">                    <span class="keyword">if</span> (!gameMap[x][y]) &#123;</span><br><span class="line">                        gameMap[x][y] = num;</span><br><span class="line">                        total++;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">ShowMenu</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">    <span class="type">int</span> print_X = <span class="number">14</span>;</span><br><span class="line">    <span class="comment">/*Goto(16, 3);</span></span><br><span class="line"><span class="comment">    printf(&quot;2 0 4 8\n&quot;);*/</span></span><br><span class="line">    Goto(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;       ____   ___  _  _    ___  \n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;      |___ \\ / _ \\| || |  ( _ ) \n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;        __) | | | | || |_ / _ \\ \n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;       / __/| |_| |__   _| (_) |\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;      |_____|\\___/   |_|  \\___/ \n&quot;</span>);</span><br><span class="line">    Goto(print_X, <span class="number">7</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;1.New Game\n&quot;</span>);</span><br><span class="line">    Goto(print_X, <span class="number">8</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;2.Old Game\n&quot;</span>);</span><br><span class="line">    Goto(print_X, <span class="number">9</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;3.Exit\n&quot;</span>);</span><br><span class="line">    Goto(print_X - <span class="number">1</span>, <span class="number">6</span> + x);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;&gt;&quot;</span>);</span><br><span class="line">    Goto(<span class="number">3</span>, <span class="number">11</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Please type [UP][DOWN] or [w][s] \nto choose your game.\n   Type [ENTER] to enter the game.&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Menu</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> now_point = <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> last_point = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> haveMenu = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="type">char</span> type;</span><br><span class="line">        <span class="type">int</span> flag = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (!haveMenu) &#123;</span><br><span class="line">            ShowMenu(now_point);</span><br><span class="line">            haveMenu = <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            Goto(<span class="number">14</span> - <span class="number">1</span>, <span class="number">6</span> + now_point);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;&gt;&quot;</span>);</span><br><span class="line">            Goto(<span class="number">14</span> - <span class="number">1</span>, <span class="number">6</span> + last_point);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        type = getch();</span><br><span class="line">        <span class="keyword">switch</span> (type) &#123;</span><br><span class="line">            <span class="keyword">case</span> UP:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;w&#x27;</span>:</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                last_point = now_point;</span><br><span class="line">                now_point = (now_point + <span class="number">1</span>) % <span class="number">3</span> + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> DOWN:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;s&#x27;</span>:</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                last_point = now_point;</span><br><span class="line">                now_point = now_point % <span class="number">3</span> + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> ENTER:</span><br><span class="line">                <span class="keyword">if</span> (now_point &lt;= <span class="number">2</span>) &#123;</span><br><span class="line">                    haveMenu = <span class="number">0</span>;</span><br><span class="line">                    Game(now_point);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>C语言程序设计</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP学习笔记</title>
    <url>/2022/10/02/PHPNotes/</url>
    <content><![CDATA[<h1 id="PHP学习笔记（持续更新中…）"><a href="#PHP学习笔记（持续更新中…）" class="headerlink" title="PHP学习笔记（持续更新中…）"></a>PHP学习笔记（持续更新中…）</h1><h2 id="PHP-Basic-Rules"><a href="#PHP-Basic-Rules" class="headerlink" title="PHP Basic Rules"></a>PHP Basic Rules</h2><p>PHP文件默认的文件拓展名<code>.php</code></p>
<h4 id="The-first-PHP-examle"><a href="#The-first-PHP-examle" class="headerlink" title="The first PHP examle"></a>The first PHP examle</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;h1&gt;My first PHP page&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">echo &quot;Hello World!&quot;;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>The function is to print “Hello World!” to Browser.<strong>Each line ends with <code>;</code></strong></p>
</blockquote>
<h4 id="annotate-注释"><a href="#annotate-注释" class="headerlink" title="annotate(注释)"></a>annotate(注释)</h4><p>Like C, PHP have  two ways to annotate.</p>
<ul>
<li>单行注释，use <code>//</code> or <code>#</code></li>
<li>多行注释，use <code>/*   */</code></li>
</ul>
<h4 id="Variables"><a href="#Variables" class="headerlink" title="Variables"></a>Variables</h4><ul>
<li>in PHP, <strong>variable must begin with <code>$</code></strong></li>
<li>Variable names are <strong>case-sensitive</strong>(<code>$a</code> and <code>$A</code> are <strong>different</strong> variables)</li>
<li>Other rules of name are the same as C language</li>
</ul>
<span id="more"></span>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$text</span>=<span class="string">&quot;Hello world!&quot;</span>;</span><br><span class="line"><span class="variable">$a</span>=<span class="number">1</span>;</span><br><span class="line"><span class="variable">$b</span>=<span class="number">2.5</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>We notice that PHP is <strong>Implicit type conversion</strong>(<u>弱类型定义语言</u>)</p>
<p>PHP 有四种不同的变量作用域：</p>
<ul>
<li>local</li>
<li>global</li>
<li>static</li>
<li>parameter</li>
</ul>
<p>If we want to visit global variables in function, we must use <strong><code>global</code></strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$x</span> = <span class="number">1</span>;</span><br><span class="line"><span class="variable">$y</span> = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sumOfTwo</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$x</span>, <span class="variable">$y</span>;</span><br><span class="line">    <span class="variable">$x</span> = <span class="variable">$x</span> + <span class="variable">$y</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">sumOfTwo</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$x</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>PHP stores all global variable in an array named $GLOBALS[index], <code>index</code> is the name of variable. It can be visited in function.</p>
</blockquote>
<p>When a function completes,  it’s all variables will be delete. However, sometimes you hope the variable can be saved. To do it, you can use <strong><code>static</code></strong> when declaring the variable.</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="built_in">static</span> <span class="variable">$x</span>=<span class="number">0</span>;</span><br></pre></td></tr></table></figure>
<p><u>$x is still a local variable!</u></p>
<h4 id="Echo"><a href="#Echo" class="headerlink" title="Echo"></a>Echo</h4><ol>
<li><p>multiple parameter</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Hello world!&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;This is &quot;</span>, <span class="string">&quot;a string,&quot;</span>, <span class="string">&quot;which use &quot;</span>, <span class="string">&quot;multiple &quot;</span>, <span class="string">&quot;parameter.&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>With variables</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="string">&quot;在 <span class="subst">$txt2</span> 学习 PHP &quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;我车的品牌是 <span class="subst">&#123;$cars[0]&#125;</span>&quot;</span>;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p><strong>Difference between <code>echo</code> and <code>print</code></strong></p>
<ul>
<li>echo - 可以输出<strong>一个或多个</strong>字符串</li>
<li>print - 只允许输出<strong>一个</strong>字符串，<strong>返回值总为 1</strong></li>
<li>其他方面相似，都可以输出<strong>with variables</strong></li>
</ul>
<p><strong>Tips：</strong><code>echo</code> is faster than <code>print</code>， <code>echo</code> have no return value ，<code>print</code> return 1。</p>
<h4 id="Data-Type"><a href="#Data-Type" class="headerlink" title="Data Type"></a>Data Type</h4><ul>
<li>String  -&gt; We can put <strong>any word in <code>&#39;&#39;</code> or <code>&quot;&quot;</code></strong></li>
<li>Integer -&gt; 十六进制（ 以 0x 为前缀）或八进制（前缀为 0）</li>
<li>Float</li>
<li>Boolean(<code>true</code>,  <code>false</code>)</li>
<li>Array</li>
<li>Object（对象）</li>
<li>NULL（空值）</li>
<li>Resource（资源类型）</li>
</ul>
<h5 id="Array"><a href="#Array" class="headerlink" title="Array"></a>Array</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$cars</span>=<span class="keyword">array</span>(<span class="string">&quot;Aito&quot;</span>,<span class="string">&quot;BMW&quot;</span>);  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h5 id="Object"><a href="#Object" class="headerlink" title="Object"></a>Object</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Car</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$color</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$color</span>=<span class="string">&quot;green&quot;</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;color = <span class="variable">$color</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">what_color</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;color;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h5 id="Resource"><a href="#Resource" class="headerlink" title="Resource"></a>Resource</h5><p>resource is a special variable, which stores a refrence to outer resource</p>
<p>(link to database、open the file…)</p>
<h4 id="Comparison-of-data"><a href="#Comparison-of-data" class="headerlink" title="Comparison of data"></a>Comparison of data</h4><ul>
<li>Loose comparison：use<code>==</code>, only compare the <u><strong>value</strong></u> of variables</li>
<li>Strict comparison：use<code>===</code>，not only <strong><u>value</u></strong>,but also <u><strong>type</strong></u>。</li>
</ul>
<p><strong><u>字符串在进行比较时，会转化成数字进行数学比较！</u></strong></p>
<h4 id="Const"><a href="#Const" class="headerlink" title="Const"></a>Const</h4><p>use<code>define()</code> ：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">bool</span> <span class="title function_ invoke__">define</span> ( <span class="keyword">string</span> <span class="variable">$name</span> , <span class="keyword">mixed</span> <span class="variable">$value</span> [, <span class="keyword">bool</span> <span class="variable">$case_insensitive</span> = <span class="literal">false</span> ] )</span><br></pre></td></tr></table></figure>
<p>three parameter:</p>
<ul>
<li>name</li>
<li>value</li>
<li><strong>case_insensitive</strong> ：optional. If  <strong>case_insensitive</strong> is TRUE，The constant is not case sensitive. <u>The default is case-sensitive</u>.</li>
</ul>
<p>Example:</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&quot;BAIDU&quot;</span>, <span class="string">&quot;www.baidu.com&quot;</span>);</span><br></pre></td></tr></table></figure>
<h4 id="String"><a href="#String" class="headerlink" title="String"></a>String</h4><p><strong>并置运算符<code>.</code></strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$txt1</span>=<span class="string">&quot;Hello world!&quot;</span>;</span><br><span class="line"><span class="variable">$txt2</span>=<span class="string">&quot;What a nice day!&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$txt1</span> . <span class="string">&quot; &quot;</span> . <span class="variable">$txt2</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><code>.</code> in PHP is similar to <code>+</code> in C++(string)</p>
</blockquote>
<p><strong>Other string functions:</strong></p>
<ol>
<li><code>strlen()</code>, return the length of string</li>
<li><code>strpos($s1, $s2)</code>, return the <code>$s2</code> ‘s position in <code>$s1</code></li>
</ol>
<p>(String subscripts start at 0)</p>
<h2 id="Structured-programming"><a href="#Structured-programming" class="headerlink" title="Structured programming"></a>Structured programming</h2><h4 id="operator"><a href="#operator" class="headerlink" title="operator"></a>operator</h4><ul>
<li><code>+</code>,<code>-</code>,<code>*</code>,<code>/</code>,<code>%</code>,<code>~</code> is like C</li>
<li><p>intdiv(10, 3) === 3</p>
</li>
<li><p>we can use <code>x += y</code> , <code>x++</code></p>
</li>
<li>both <code>!=</code> and <code>&lt;&gt;</code> is legal</li>
<li><code>x!==y</code> means <u>如果 x 不等于 y，或它们类型不相同，则返回 true</u></li>
<li>both <code>and</code> and <code>&amp;&amp;</code> is legal(优先级不同)</li>
<li><code>&lt;&lt;</code>,<code>&gt;&gt;</code></li>
</ul>
<h4 id="If-else-switch"><a href="#If-else-switch" class="headerlink" title="If-else, switch"></a>If-else, switch</h4><p>In php, <code>if-else</code> and <code>switch</code> are the same as that in C/C++.</p>
<p>The only difference is php provide <code>elseif</code>.</p>
<p>Example:</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$t</span>=<span class="title function_ invoke__">date</span>(<span class="string">&quot;H&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$t</span>&lt;<span class="string">&quot;10&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Have a good morning!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span> (<span class="variable">$t</span>&lt;<span class="string">&quot;20&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Have a good day!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Have a good night!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="For、While"><a href="#For、While" class="headerlink" title="For、While"></a>For、While</h4><h5 id="For"><a href="#For" class="headerlink" title="For"></a>For</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">1</span>; <span class="variable">$i</span> &lt;= <span class="number">10</span>; <span class="variable">$i</span>++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;数字为 &quot;</span> . <span class="variable">$i</span> . PHP_EOL;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h5 id="For-each"><a href="#For-each" class="headerlink" title="For each"></a>For each</h5><p><strong>Format 1:<code>foreach ($array as $value)&#123;&#125;</code></strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$x</span> = <span class="keyword">array</span>(<span class="string">&quot;Google&quot;</span>,<span class="string">&quot;Baidu&quot;</span>,<span class="string">&quot;Bing&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$x</span> <span class="keyword">as</span> <span class="variable">$value</span>)  <span class="comment">// x is the name of array</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$value</span> . PHP_EOL;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>Format 2:<code>foreach ($array as $key =&gt; $value)&#123;&#125;</code></strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$x</span> = <span class="keyword">array</span>(<span class="number">1</span>=&gt;<span class="string">&quot;Google&quot;</span>, <span class="number">2</span>=&gt;<span class="string">&quot;Baidu&quot;</span>, <span class="number">3</span>=&gt;<span class="string">&quot;Bing&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$x</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;key  为 &quot;</span> . <span class="variable">$key</span> . <span class="string">&quot;，对应的 value 为 &quot;</span>. <span class="variable">$value</span> . PHP_EOL;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h5 id="While-Do-While"><a href="#While-Do-While" class="headerlink" title="While/Do While"></a>While/Do While</h5><p>In php, <code>while</code> and <code>do while</code> are the same as that in C/C++.</p>
<p><strong>Format:<code>while(condition)&#123;// some codes&#125;</code></strong></p>
<h4 id="Array-1"><a href="#Array-1" class="headerlink" title="Array"></a>Array</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$s</span> = <span class="keyword">array</span>(<span class="string">&quot;aaa&quot;</span>, <span class="string">&quot;bbb&quot;</span>, <span class="string">&quot;abc&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">count</span>(<span class="variable">$s</span>); <span class="comment">// count() return the length of array</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>Key-value</strong>:</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$age</span> = <span class="keyword">array</span>(<span class="string">&quot;Mike&quot;</span> =&gt; <span class="string">&quot;35&quot;</span>, <span class="string">&quot;Amy&quot;</span>=&gt;<span class="string">&quot;37&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Mike is &quot;</span>. <span class="variable">$age</span>[<span class="string">&#x27;Mike&#x27;</span>];</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="sort"><a href="#sort" class="headerlink" title="sort"></a>sort</h4><p>example:</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$s</span> = <span class="keyword">array</span>(<span class="string">&quot;aaa&quot;</span>, <span class="string">&quot;bbb&quot;</span>, <span class="string">&quot;abc&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">sort</span>(<span class="variable">$s</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>说明：</p>
<ul>
<li><code>sort()</code>:对数组升序排列</li>
<li><code>rsort()</code>: 对数组降序排列</li>
<li><code>ksort()</code> : 根据关联数组的键，对数组升序排列</li>
<li><code>asort()</code> :根据关联数组的值，对数组升序排列</li>
<li><code>krsort()</code>:根据关联数组的键，对数组降序排列</li>
<li><code>arsort()</code> :根据关联数组的值，对数组降序排列</li>
</ul>
<h4 id="Function"><a href="#Function" class="headerlink" title="Function"></a>Function</h4><p><strong>Format</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">functionName</span>(<span class="params"><span class="variable">$a</span>, <span class="variable">$b</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$total</span> = <span class="variable">$a</span> + <span class="variable">$b</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$total</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>php function uses <code>return</code> to return value</p>
]]></content>
      <tags>
        <tag>编程语言</tag>
      </tags>
  </entry>
  <entry>
    <title>前端学习笔记</title>
    <url>/2022/10/17/HtmlandCss/</url>
    <content><![CDATA[<h1 id="前端入门笔记（Html-Css）"><a href="#前端入门笔记（Html-Css）" class="headerlink" title="前端入门笔记（Html+Css）"></a>前端入门笔记（Html+Css）</h1><h2 id="HTML基础"><a href="#HTML基础" class="headerlink" title="HTML基础"></a>HTML基础</h2><h3 id="Web标准"><a href="#Web标准" class="headerlink" title="Web标准"></a>Web标准</h3><div class="table-container">
<table>
<thead>
<tr>
<th>构成</th>
<th>语言</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>结构</td>
<td>HTML</td>
<td><strong>页面元素</strong>和内容</td>
</tr>
<tr>
<td>表现</td>
<td>CSS</td>
<td>页面元素的外观和位置等<strong>页面样式</strong>（如：颜色、大小等）</td>
</tr>
<tr>
<td>行为</td>
<td>JavaScript</td>
<td>网页模型的定义和<strong>页面交互</strong></td>
</tr>
</tbody>
</table>
</div>
<h3 id="HTML骨架"><a href="#HTML骨架" class="headerlink" title="HTML骨架"></a>HTML骨架</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>网页标题<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p> 在VScode中，<u>输入<code>!</code>并按键盘上的<strong>Tab</strong>键</u>可快速生成Html的骨架代码。</p>
</blockquote>
<hr>
<h3 id="HTML基本语法"><a href="#HTML基本语法" class="headerlink" title="HTML基本语法"></a>HTML基本语法</h3><h4 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h4><ul>
<li><p>浏览器执行代码时会忽略所有的注释</p>
</li>
<li><p>Vscode中快捷键：<code>Ctrl + /</code></p>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 这是一段注释 --&gt;</span></span><br></pre></td></tr></table></figure>
<span id="more"></span>
<h4 id="Html-标签的结构"><a href="#Html-标签的结构" class="headerlink" title="Html 标签的结构"></a>Html 标签的结构</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span>加粗文字<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li><p><code>&lt;strong&gt;</code>是开始标签，<code>&lt;/strong&gt;</code>是结束标签</p>
</li>
<li><p>少数标签不需要成对出现，称为单标签</p>
</li>
</ul>
<h4 id="标题标签"><a href="#标题标签" class="headerlink" title="标题标签"></a>标题标签</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>1级标签<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>2级标签<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>3级标签<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>4级标签<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h5</span>&gt;</span>5级标签<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h6</span>&gt;</span>6级标签<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>只有1~6级标签，重要程度依次递减</li>
</ul>
<h4 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    这里是段落1</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    这里是段落2</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h4><p>代码：<code>&lt;br&gt;</code></p>
<p>可以直接加在段落文字中</p>
<h4 id="水平分割线"><a href="#水平分割线" class="headerlink" title="水平分割线"></a>水平分割线</h4><p>代码：<code>&lt;hr&gt;</code></p>
<h4 id="文本格式化标签"><a href="#文本格式化标签" class="headerlink" title="文本格式化标签"></a>文本格式化标签</h4><div class="table-container">
<table>
<thead>
<tr>
<th>标签</th>
<th>标签(突出重要性的强调语境)</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>b</td>
<td>strong</td>
<td>加粗</td>
</tr>
<tr>
<td>u</td>
<td>ins</td>
<td>下划线</td>
</tr>
<tr>
<td>i</td>
<td>em</td>
<td>倾斜</td>
</tr>
<tr>
<td>s</td>
<td>del</td>
<td>删除线</td>
</tr>
</tbody>
</table>
</div>
<h4 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h4><p>代码：<code>&lt;img src=&quot;&quot; alt=&quot;&quot;&gt;</code></p>
<blockquote>
<p> <strong>属性注意点：</strong></p>
<ol>
<li>标签属性写在开始标签内部</li>
<li>属性之间用<strong>空格</strong>隔开，属性之间没有顺序之分</li>
</ol>
</blockquote>
<p><strong>alt属性</strong></p>
<p>替换文本，当图片无法正常显示时显示alt属性中的内容</p>
<p><strong>title属性</strong></p>
<p>鼠标悬停时显示的文本</p>
<p><strong>width和height属性</strong></p>
<p>宽度和高度（数字）</p>
<ul>
<li>如果只设置width或height中的一个，另一个属性会自动等比例缩放</li>
<li>如果同时设置了width和height两个，图片可能会变形</li>
</ul>
<h4 id="音频"><a href="#音频" class="headerlink" title="音频"></a>音频</h4><p>代码：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">&quot;./music.mp3&quot;</span> <span class="attr">controls</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>常见属性</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>属性名</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>src</td>
<td>音频路径</td>
</tr>
<tr>
<td>controls</td>
<td>显示播放的控件</td>
</tr>
<tr>
<td>autoplay</td>
<td>自动播放</td>
</tr>
<tr>
<td>loop</td>
<td>循环播放</td>
</tr>
</tbody>
</table>
</div>
<p>目前支持三种格式：mp3、wav、ogg</p>
<h4 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h4><p>代码：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span>=<span class="string">&quot;./video.mp4&quot;</span> <span class="attr">controls</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>常见属性</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>属性名</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>src</td>
<td>音频路径</td>
</tr>
<tr>
<td>controls</td>
<td>显示播放的控件</td>
</tr>
<tr>
<td>autoplay</td>
<td>自动播放</td>
</tr>
<tr>
<td>loop</td>
<td>循环播放</td>
</tr>
</tbody>
</table>
</div>
<blockquote>
<p>谷歌浏览器可以让视频自动播放，但必须是静音状态muted</p>
</blockquote>
<p>目前支持三种格式：mp4、WebM、ogg</p>
<h4 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;./目标网页.html&quot;</span>&gt;</span>这是一个超链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>当网站开发初期不知道跳转地址的时候，href的值书写<code>&quot;#&quot;</code>(空连接)</li>
</ul>
<p>属性名：target</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>取值</th>
<th>效果</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>_self</code></td>
<td>默认值，在当前窗口跳转</td>
</tr>
<tr>
<td><code>_blank</code></td>
<td>在新窗口跳转</td>
</tr>
</tbody>
</table>
</div>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;./目标网页.html&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>这是一个超链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>
<hr>
<h3 id="HTML进阶"><a href="#HTML进阶" class="headerlink" title="HTML进阶"></a>HTML进阶</h3><h4 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h4><p>用于内容比较规整的区域</p>
<h5 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h5><p>标签组成：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>标签名</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>ul</td>
<td>表示无序列表的的整体，用于包裹li标签</td>
</tr>
<tr>
<td>li</td>
<td>表示无序列表的每一项，用于包含每一行的内容</td>
</tr>
</tbody>
</table>
</div>
<p><strong>注意</strong>：ul标签中只允许包含li标签，li标签中可以包含任意内容</p>
<h5 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h5><p>标签组成：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>标签名</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>ol</td>
<td>表示有序列表的的整体，用于包裹li标签</td>
</tr>
<tr>
<td>li</td>
<td>表示有序列表的每一项，用于包含每一行的内容</td>
</tr>
</tbody>
</table>
</div>
<p><strong>注意</strong>：ol标签中只允许包含li标签，li标签中可以包含任意内容</p>
<h5 id="自定义列表"><a href="#自定义列表" class="headerlink" title="自定义列表"></a>自定义列表</h5><p>常用在网页底部的导航中</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>标签名</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>dl</td>
<td>表示自定义列表的的整体，用于包裹dt/dd标签</td>
</tr>
<tr>
<td>dt</td>
<td>表示自定义列表的主题</td>
</tr>
<tr>
<td>dd</td>
<td>表示自定义列表的针对主题的每一项内容</td>
</tr>
</tbody>
</table>
</div>
<p><strong>注意</strong>：dl标签中只允许包含dt/dd标签，dt/dd标签中可以包含任意内容</p>
<h4 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h4><h5 id="建立表格"><a href="#建立表格" class="headerlink" title="建立表格"></a>建立表格</h5><div class="table-container">
<table>
<thead>
<tr>
<th>标签名</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>table</td>
<td>表格整体，可用于包裹多个tr</td>
</tr>
<tr>
<td>tr</td>
<td>表格每行，可用于包裹多个td</td>
</tr>
<tr>
<td>td</td>
<td>表格单元格</td>
</tr>
</tbody>
</table>
</div>
<p>参考代码:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>Header 1<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>Header 2<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--这是表头单元格--&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>row 1, cell 1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>row 1, cell 2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>row 2, cell 1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>row 2, cell 2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>常用属性：<code>border</code>、<code>width</code>、<code>height</code></p>
<blockquote>
<p><code>width</code>、<code>height</code>等属性一般在css文件中设置</p>
</blockquote>
<h5 id="表格标题-amp-表头单元格"><a href="#表格标题-amp-表头单元格" class="headerlink" title="表格标题&amp;表头单元格"></a>表格标题&amp;表头单元格</h5><div class="table-container">
<table>
<thead>
<tr>
<th>标签名</th>
<th>名称</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>caption</td>
<td>表格大标题</td>
<td>表示表格整体大标题，默认在表格整体顶部居中位置显示</td>
</tr>
<tr>
<td>th</td>
<td>表头单元格</td>
<td>表示一列小标题，通常用于表格第一行，默认内部文字加粗并居中显示</td>
</tr>
</tbody>
</table>
</div>
<h5 id="表格结构标签"><a href="#表格结构标签" class="headerlink" title="表格结构标签"></a>表格结构标签</h5><div class="table-container">
<table>
<thead>
<tr>
<th>标签名</th>
<th>名称</th>
</tr>
</thead>
<tbody>
<tr>
<td>thead</td>
<td>表格头部</td>
</tr>
<tr>
<td>tbody</td>
<td>表格主体</td>
</tr>
<tr>
<td>tfoot</td>
<td>表格底部</td>
</tr>
</tbody>
</table>
</div>
<h5 id="合并单元格"><a href="#合并单元格" class="headerlink" title="合并单元格"></a>合并单元格</h5><p>保留数据原则：<strong>左上原则</strong></p>
<p>给保留的单元格td设置属性：跨行合并(rowspan)或跨列合并(colspan)，参数是合并的行数/列数</p>
<h4 id="表单（重要）"><a href="#表单（重要）" class="headerlink" title="表单（重要）"></a>表单（重要）</h4><h5 id="input系列-单标签"><a href="#input系列-单标签" class="headerlink" title="input系列(单标签)"></a>input系列(单标签)</h5><p>input标签通过<strong>设置不同的<code>type</code>值展示不同的效果</strong></p>
<p><strong>type属性值</strong></p>
<div class="table-container">
<table>
<thead>
<tr>
<th>标签名</th>
<th>type属性值</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>input</td>
<td>text</td>
<td>文本框，用于输入单行文本</td>
</tr>
<tr>
<td>input</td>
<td>password</td>
<td>密码框，用于输入密码</td>
</tr>
<tr>
<td>input</td>
<td>radio</td>
<td>单选框，用于多选一</td>
</tr>
<tr>
<td>input</td>
<td>checkbox</td>
<td>多选框，用于多选多</td>
</tr>
<tr>
<td>input</td>
<td>file</td>
<td>文件选择，用于之后上传文件</td>
</tr>
<tr>
<td>input</td>
<td>submit</td>
<td>提交按钮，用于提交</td>
</tr>
<tr>
<td>input</td>
<td>reset</td>
<td>重置按钮，用于重置</td>
</tr>
<tr>
<td>input</td>
<td>button</td>
<td>普通按钮，默认无功能，之后配合js添加功能</td>
</tr>
</tbody>
</table>
</div>
<p><strong>input占位符</strong></p>
<p>type属性：text</p>
<p>常用属性：</p>
<ul>
<li>placeholder占位符。提示用户输入内容的文本</li>
</ul>
<p><strong>单选功能和默认选中</strong></p>
<p>type属性：radio</p>
<p>常用属性：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>属性名</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>name</td>
<td>分组。<strong>*有相同name属性值的单选框为一组，一组中只能被选中一个</strong></td>
</tr>
<tr>
<td>checked</td>
<td>默认选中</td>
</tr>
</tbody>
</table>
</div>
<p>参考代码：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">性别<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">checked</span>&gt;</span>男 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span>&gt;</span>女</span><br></pre></td></tr></table></figure>
<p><strong>多文件上传</strong></p>
<p>type属性：file</p>
<p>常用属性</p>
<ul>
<li>mutiple：实现多文件选择</li>
</ul>
<p><strong>input按钮</strong></p>
<div class="table-container">
<table>
<thead>
<tr>
<th>标签名</th>
<th>type属性值</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>input</td>
<td>submit</td>
<td>提交按钮。点击之后提交数据给后端服务器</td>
</tr>
<tr>
<td>input</td>
<td>reset</td>
<td>重置按钮。点击之后恢复表单默认值</td>
</tr>
<tr>
<td>input</td>
<td>button</td>
<td>普通按钮。默认无功能，之后配合js添加功能</td>
</tr>
</tbody>
</table>
</div>
<p><u><strong>*要实现提交和重置功能，需要一个表单域标签<code>&lt;form action=&quot;&quot;&gt;&lt;/form&gt;</code></strong></u></p>
<p><code>action</code>参数表示提交地址</p>
<p>按钮显示文字：使用<code>value</code>参数</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;普通按钮&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;注册&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h5 id="button按钮标签（双标签）"><a href="#button按钮标签（双标签）" class="headerlink" title="button按钮标签（双标签）"></a>button按钮标签（双标签）</h5><p>type属性值</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>标签名</th>
<th>type属性值</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>button</td>
<td>submit</td>
<td>提交按钮。点击之后提交数据给后端服务器</td>
</tr>
<tr>
<td>button</td>
<td>reset</td>
<td>重置按钮，点击之后恢复表单默认值</td>
</tr>
<tr>
<td>button</td>
<td>button</td>
<td>普通按钮。默认无功能，之后配合js添加功能</td>
</tr>
</tbody>
</table>
</div>
<ul>
<li>button按钮是双标签，更便于包裹其他文字图片内容</li>
</ul>
<h5 id="select下拉菜单"><a href="#select下拉菜单" class="headerlink" title="select下拉菜单"></a>select下拉菜单</h5><p>标签组成：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>标签</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>select</td>
<td>下拉菜单的整体</td>
</tr>
<tr>
<td>option</td>
<td>下拉菜单的每一项</td>
</tr>
</tbody>
</table>
</div>
<p>常见属性</p>
<ul>
<li>selected：下拉菜单的默认选中</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h5 id="textarea文本域"><a href="#textarea文本域" class="headerlink" title="textarea文本域"></a>textarea文本域</h5><p>标签名：textarea</p>
<p>常见属性：</p>
<ul>
<li>cols：规定文本域可见宽度</li>
<li>rows：规定了文本域内可见行数</li>
</ul>
<h5 id="Label标签"><a href="#Label标签" class="headerlink" title="Label标签"></a>Label标签</h5><p>常用于绑定内容与表单标签的关系</p>
<p>两种使用方法：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">性别：</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">id</span>=<span class="string">&quot;nan&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;nan&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="语义标签"><a href="#语义标签" class="headerlink" title="语义标签"></a>语义标签</h4><h5 id="没有语义的布局标签div、span"><a href="#没有语义的布局标签div、span" class="headerlink" title="没有语义的布局标签div、span"></a>没有语义的布局标签div、span</h5><ul>
<li><p>div标签：一行只显示一个，独占一行</p>
</li>
<li><p>span标签：一行可显示多个</p>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>div标签1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>div标签2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 两个标签会分行显示 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>span标签1<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>span标签2<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 两个标签会在同一行显示 --&gt;</span></span><br></pre></td></tr></table></figure>
<p>这两个标签使用频率非常高</p>
<h5 id="有语义的标签布局"><a href="#有语义的标签布局" class="headerlink" title="有语义的标签布局"></a>有语义的标签布局</h5><p>HTML5新版本</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>标签名</th>
<th>语义</th>
</tr>
</thead>
<tbody>
<tr>
<td>header</td>
<td>网页头部</td>
</tr>
<tr>
<td>nav</td>
<td>网页导航</td>
</tr>
<tr>
<td>footer</td>
<td>网页底部</td>
</tr>
<tr>
<td>aside</td>
<td>网页侧边栏</td>
</tr>
<tr>
<td>section</td>
<td>网页区块</td>
</tr>
<tr>
<td>article</td>
<td>网页文章</td>
</tr>
</tbody>
</table>
</div>
<ul>
<li><p>显示特点和div一致，但是比div多了不同的语义</p>
</li>
<li><p>常用于做手机端 3</p>
</li>
</ul>
<h4 id="字符实体"><a href="#字符实体" class="headerlink" title="字符实体"></a>字符实体</h4><p>通过字符实体在网页中显示特殊符号</p>
<p>HTML会将多个空格吞为一个空格，要显示多个空格就字符实体</p>
<p>结构：&amp;英文</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>显示结果</th>
<th>描述</th>
<th>实体名称</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td>空格</td>
<td>&amp;nbsp</td>
</tr>
<tr>
<td>&lt;</td>
<td>小于号</td>
<td>&amp;lt</td>
</tr>
<tr>
<td>&gt;</td>
<td>大于号</td>
<td>&amp;gt</td>
</tr>
</tbody>
</table>
</div>
<p>其他字符可查<a href="https://www.w3school.com.cn/html/html_entities.asp">HTML 字符实体 (w3school.com.cn)</a></p>
<h2 id="CSS基础"><a href="#CSS基础" class="headerlink" title="CSS基础"></a>CSS基础</h2><h3 id="CSS基本语法"><a href="#CSS基本语法" class="headerlink" title="CSS基本语法"></a>CSS基本语法</h3><p>CSS写在哪里</p>
<ul>
<li>css写在style标签中，style标签一般写在head标签里面，title标签下面</li>
</ul>
<h4 id="注释-1"><a href="#注释-1" class="headerlink" title="注释"></a>注释</h4><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 这是css的注释方式 */</span></span><br></pre></td></tr></table></figure>
<h4 id="CSS基本形式"><a href="#CSS基本形式" class="headerlink" title="CSS基本形式"></a>CSS基本形式</h4><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><code>p</code>是选择器，red是color参数的值</li>
</ul>
<h4 id="CSS引入方式"><a href="#CSS引入方式" class="headerlink" title="CSS引入方式"></a>CSS引入方式</h4><ol>
<li><p><strong>内联式</strong>：将CSS（层叠样式表）写在style标签中</p>
</li>
<li><p><strong>外联式</strong>：将CSS写在单独的.css文件中，需要通过link标签在网页中引入</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 关系为样式表 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./style.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<ol>
<li><p><strong>行内式</strong>：将CSS写在标签的style属性中</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;color: red;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>只需将css文件中大括号里面的内容写入双引号内</li>
</ul>
</li>
</ol>
<p><strong>常见使用场景</strong></p>
<div class="table-container">
<table>
<thead>
<tr>
<th>引入方式</th>
<th>书写位置</th>
<th>作用范围</th>
<th>使用场景</th>
</tr>
</thead>
<tbody>
<tr>
<td>内嵌式</td>
<td>CSS写在style标签中</td>
<td>当前页面</td>
<td>小案例</td>
</tr>
<tr>
<td>外联式</td>
<td>CSS写在单独的css文件中，通过link标签引入</td>
<td>多个页面</td>
<td>项目中</td>
</tr>
<tr>
<td>行内式</td>
<td>CSS写在标签的style属性中</td>
<td>当前标签</td>
<td>配合js使用</td>
</tr>
</tbody>
</table>
</div>
<h4 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h4><h5 id="标签选择器"><a href="#标签选择器" class="headerlink" title="标签选择器"></a>标签选择器</h5><p>结构：<code>标签名&#123;css属性名: 属性值;&#125;</code></p>
<ul>
<li>选择一类标签，无论嵌套关系有多深</li>
</ul>
<h5 id="类选择器"><a href="#类选择器" class="headerlink" title="类选择器"></a>类选择器</h5><p>结构：<code>.类名&#123;css属性名: 属性值;&#125;</code></p>
<ul>
<li><p>所有标签都有class属性，其属性值为<strong>类名</strong></p>
</li>
<li><p>类名由数字、字母、下划线、中划线组成，但不能以数字或中划线开头</p>
</li>
<li><p>一个标签<strong>可以同时拥有多个类名</strong>，类名之间用空格隔开</p>
<p>例如：<code>&lt;p class=&quot;red size&quot;&gt;&lt;/p&gt;</code></p>
</li>
<li><p>类名可重复，一个类选择器可以同时选中多个标签</p>
</li>
</ul>
<h5 id="id选择器"><a href="#id选择器" class="headerlink" title="id选择器"></a>id选择器</h5><p>结构：<code>#id属性值&#123;css属性名: 属性值;&#125;</code></p>
<ul>
<li>所有标签上都有id属性</li>
<li>id属性在一个页面中是<strong>唯一的、不重复的</strong></li>
<li><p>一个标签上只能由一个id属性值，一个id选择器只能选中一个标签</p>
</li>
<li><p>常配合js寻找标签</p>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> = <span class="string">&quot;blue&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#blue</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="通配符选择器"><a href="#通配符选择器" class="headerlink" title="通配符选择器"></a>通配符选择器</h5><p>结构：<code>*&#123;css属性名: 属性值;&#125;</code></p>
<p>作用：找到页面中所有的标签，设置样式</p>
<h4 id="文本样式"><a href="#文本样式" class="headerlink" title="文本样式"></a>文本样式</h4><h5 id="字体大小"><a href="#字体大小" class="headerlink" title="字体大小"></a>字体大小</h5><p>属性名：<strong>font-size</strong></p>
<p>取值：数字 + px（谷歌浏览器<strong>默认文字大小是16px</strong>）</p>
<h5 id="字体粗细"><a href="#字体粗细" class="headerlink" title="字体粗细"></a>字体粗细</h5><p>属性名：<strong>font-weight</strong></p>
<p>取值：</p>
<ul>
<li>关键字：normal（正常）、bold（加粗）</li>
<li><p>纯数字：100~900的整百数，400（正常）、700（加粗）</p>
</li>
<li><p>不是所有字体都提供了九种粗细</p>
</li>
</ul>
<h5 id="字体样式"><a href="#字体样式" class="headerlink" title="字体样式"></a>字体样式</h5><p>属性名：<strong>font-style</strong></p>
<p>取值：</p>
<ul>
<li>正常（默认值）：normal</li>
<li>倾斜：italic</li>
</ul>
<h5 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h5><ul>
<li><p>Windows中默认字体是微软雅黑</p>
</li>
<li><p>macOS中默认字体是苹方</p>
</li>
</ul>
<p>属性名：<strong>font-family</strong></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: 宋体,黑体,sans-serif;</span><br><span class="line">    <span class="comment">/*如果电脑没有安装宋体，就使用黑体*/</span></span><br><span class="line">    <span class="comment">/*sans-serif表示无衬线字体*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="样式的层叠问题"><a href="#样式的层叠问题" class="headerlink" title="样式的层叠问题"></a>样式的层叠问题</h5><p>如果给同一个标签设置了相同的属性，此时样式会层叠（覆盖），写在最下面的会生效</p>
<h5 id="font复合属性"><a href="#font复合属性" class="headerlink" title="font复合属性"></a>font复合属性</h5><p>属性名：<strong>font</strong></p>
<p>取值：<code>font:style weight size family</code> </p>
<p>省略要求：只能省略前两个（相当于设置为默认值）</p>
<h5 id="文本缩进"><a href="#文本缩进" class="headerlink" title="文本缩进"></a>文本缩进</h5><p>属性名：<strong>text-indent</strong></p>
<p>取值：</p>
<ul>
<li>数字+px</li>
<li>数字+em（推荐：1em = 当前标签的font-size的大小）</li>
</ul>
<h5 id="文本水平对齐方式"><a href="#文本水平对齐方式" class="headerlink" title="文本水平对齐方式"></a>文本水平对齐方式</h5><p>属性名：<strong>text-align</strong></p>
<p>取值：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">属性值</th>
<th style="text-align:center">效果</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">left</td>
<td style="text-align:center">左对齐</td>
</tr>
<tr>
<td style="text-align:center">center</td>
<td style="text-align:center">居中对齐</td>
</tr>
<tr>
<td style="text-align:center">right</td>
<td style="text-align:center">右对齐</td>
</tr>
</tbody>
</table>
</div>
<p>text-align: center 能让哪些元素水平居中</p>
<ol>
<li>文本</li>
<li>span标签、a标签</li>
<li>input标签、img标签</li>
</ol>
<p><strong>注意：要让元素水平居中，text-align: center需要给以上元素的 <u>父元素</u> 设置</strong></p>
<h5 id="文本修饰线"><a href="#文本修饰线" class="headerlink" title="文本修饰线"></a>文本修饰线</h5><p>属性名：<strong>text-decoration</strong></p>
<div class="table-container">
<table>
<thead>
<tr>
<th>属性值</th>
<th>效果</th>
</tr>
</thead>
<tbody>
<tr>
<td>underline</td>
<td>下划线</td>
</tr>
<tr>
<td>line-through</td>
<td>删除线</td>
</tr>
<tr>
<td>overline</td>
<td>上划线</td>
</tr>
<tr>
<td>none</td>
<td>无装饰线</td>
</tr>
</tbody>
</table>
</div>
<ul>
<li>开发中常常会使用<code>text-decoration: none;</code>清楚a标签默认的下划线</li>
</ul>
<h5 id="行高"><a href="#行高" class="headerlink" title="行高"></a>行高</h5><p>属性名：<strong>line-height</strong></p>
<p>作用：控制一行的上下行间距</p>
<p>取值：</p>
<ol>
<li>数字+px</li>
<li>倍数（当前标签font-size的倍数）</li>
</ol>
<p><img src="/images/line-height.png" style="zoom: 33%;" /></p>
<p>与font连写：<code>font: style size/line-height familt;</code></p>
<h5 id="颜色"><a href="#颜色" class="headerlink" title="颜色"></a>颜色</h5><p>文字颜色：<strong>color</strong></p>
<p>背景颜色：<strong>background-color</strong></p>
<p>常用表示法：</p>
<ul>
<li>关键词：red、green</li>
<li><p>rgb表示法：红绿蓝（0-255）</p>
</li>
<li><p>十六进制表示法：<code>#</code>开头，<code>#000000</code>表示纯黑色（RGB），可简写<code>#000</code>（两位相同）</p>
</li>
<li><p>rgba写法：红绿蓝（0-255）+透明度（0-1）</p>
</li>
</ul>
<h5 id="标签水平居中"><a href="#标签水平居中" class="headerlink" title="标签水平居中"></a>标签水平居中</h5><p>实现让div、p、h（大盒子）水平居中</p>
<ul>
<li>通过对 <strong>当前元素本身</strong> 设置<code>margin: 0 auto;</code>实现。</li>
<li>如果当前盒子没有设置宽度，此时会默认占满父元素的宽度</li>
</ul>
<hr>
<h3 id="CSS进阶"><a href="#CSS进阶" class="headerlink" title="CSS进阶"></a>CSS进阶</h3><h4 id="选择器-1"><a href="#选择器-1" class="headerlink" title="选择器"></a>选择器</h4><h5 id="复合选择器"><a href="#复合选择器" class="headerlink" title="复合选择器"></a>复合选择器</h5><p><strong>后代选择器</strong></p>
<p>作用：根据HTML标签的嵌套关系，选择父元素 <strong>后代中</strong> 满足条件的元素</p>
<p>语法：<code>选择器1 选择器2 &#123;css&#125;</code></p>
<p><strong>子代选择器</strong></p>
<p>作用：根据HTML标签的嵌套关系，选择父元素 <strong>子代中</strong> 满足条件的元素（子代<u>只包括儿子</u>）</p>
<p>语法：<code>选择器1 &gt; 选择器2 &#123;css&#125;</code></p>
<h5 id="并集选择器"><a href="#并集选择器" class="headerlink" title="并集选择器"></a>并集选择器</h5><p>作用：同时选择多组标签，设置相同的样式</p>
<p>语法：<code>选择器1, 选择器2 &#123;css&#125;</code></p>
<blockquote>
<p>推荐每一个选择器逗号后换行</p>
</blockquote>
<h5 id="交集选择器"><a href="#交集选择器" class="headerlink" title="交集选择器"></a>交集选择器</h5><p>作用：选择同时满足多个选择器的标签</p>
<p>语法：<code>选择器1选择器2 &#123;css&#125;</code></p>
<p>参考代码</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span><span class="selector-class">.box</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="hover伪类选择器"><a href="#hover伪类选择器" class="headerlink" title="hover伪类选择器"></a>hover伪类选择器</h5><p>作用：选中鼠标<strong>悬停</strong>在元素上的<strong>状态</strong>，设置样式</p>
<p>语法：<code>选择器:hover&#123; css &#125;</code></p>
<ul>
<li><p>任何标签都可以添加伪类</p>
</li>
<li><p><code>:</code>与<code>hover</code>之间不能有空格！</p>
</li>
</ul>
<h4 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h4><h5 id="背景颜色"><a href="#背景颜色" class="headerlink" title="背景颜色"></a>背景颜色</h5><p>属性名：<strong>background-color</strong>(bgc)</p>
<ul>
<li>背景颜色默认是透明的</li>
</ul>
<h5 id="背景图片"><a href="#背景图片" class="headerlink" title="背景图片"></a>背景图片</h5><p>属性名：<strong>background-image</strong>(bgi)</p>
<p>属性值：<code>background-image: url(&#39;图片的路径&#39;);</code></p>
<ul>
<li>若背景图片小于当前盒子的大小，则默认重复平铺</li>
</ul>
<h5 id="背景平铺"><a href="#背景平铺" class="headerlink" title="背景平铺"></a>背景平铺</h5><p>属性名：<strong>background-repeat</strong>(bgr)</p>
<p>属性值：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">取值</th>
<th style="text-align:center">效果</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">repeat</td>
<td style="text-align:center">（默认）水平和垂直方向都平铺</td>
</tr>
<tr>
<td style="text-align:center">no-repeat</td>
<td style="text-align:center">不平铺</td>
</tr>
<tr>
<td style="text-align:center">repeat-x</td>
<td style="text-align:center">沿着水平方向（x轴）平铺</td>
</tr>
<tr>
<td style="text-align:center">repeat-y</td>
<td style="text-align:center">沿着垂直方向（y轴）平铺</td>
</tr>
</tbody>
</table>
</div>
<h5 id="背景位置"><a href="#背景位置" class="headerlink" title="背景位置"></a>背景位置</h5><p>属性名：<strong>background-position</strong>(bgp)</p>
<p>属性值：<code>background-postion: 水平方向位置 垂直方向位置;</code></p>
<p><img src="/images/postion.png" alt="image-20221017114548382" style="zoom: 67%;" /></p>
<ul>
<li>取值可以为负，但背景色和背景图只显示在盒子里面</li>
</ul>
<h5 id="背景相关属性连写"><a href="#背景相关属性连写" class="headerlink" title="背景相关属性连写"></a>背景相关属性连写</h5><p>属性名：<strong>backgound</strong></p>
<p>推荐书写顺序：<code>background: color image repeat position</code></p>
<h4 id="元素显示模式"><a href="#元素显示模式" class="headerlink" title="元素显示模式"></a>元素显示模式</h4><h5 id="块级元素"><a href="#块级元素" class="headerlink" title="块级元素"></a>块级元素</h5><p>显示特点：</p>
<ol>
<li>独占一行</li>
<li>宽度默认是父元素的宽度，高度默认由内容撑开，可以设置宽高</li>
</ol>
<p>例如：div、p、h、form</p>
<h5 id="行内元素"><a href="#行内元素" class="headerlink" title="行内元素"></a>行内元素</h5><p>显示特点：</p>
<ol>
<li>一行可以显示多个</li>
<li>宽度和高度默认由内容撑开，<strong>不可以设置宽高</strong></li>
</ol>
<p>例如：<strong>a、span</strong>、b、u</p>
<h5 id="行内块元素"><a href="#行内块元素" class="headerlink" title="行内块元素"></a>行内块元素</h5><p>显示特点：</p>
<ol>
<li>一行可以显示多个</li>
<li>可以设置宽高</li>
</ol>
<p>例如：input、textarea、button、select</p>
<ul>
<li>img标签由行内块元素的特点，但是Chrome调试器显示为inline</li>
</ul>
<h5 id="元素显示模式转换"><a href="#元素显示模式转换" class="headerlink" title="元素显示模式转换"></a>元素显示模式转换</h5><p>改变元素的显示特点：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>属性</th>
<th>效果</th>
<th>使用频率</th>
</tr>
</thead>
<tbody>
<tr>
<td>display: block</td>
<td>转换成块级元素</td>
<td>较多</td>
</tr>
<tr>
<td>display: inline-block</td>
<td>转换成行内块元素</td>
<td>较多</td>
</tr>
<tr>
<td>display: inline</td>
<td>转换成行内元素</td>
<td>较少</td>
</tr>
</tbody>
</table>
</div>
<h5 id="HTML元素嵌套注意点"><a href="#HTML元素嵌套注意点" class="headerlink" title="HTML元素嵌套注意点"></a>HTML元素嵌套注意点</h5><ul>
<li><p>p标签中不要嵌套div、p、h等块级元素</p>
</li>
<li><p>a标签不能嵌套a标签</p>
</li>
</ul>
<h4 id="CSS特性"><a href="#CSS特性" class="headerlink" title="CSS特性"></a>CSS特性</h4><h5 id="继承性"><a href="#继承性" class="headerlink" title="继承性"></a>继承性</h5><p>子元素默认继承父元素样式的特点，如color,font,text-indent,line-height（<strong>文字控制属性都可以继承</strong>）</p>
<p>特殊情况：</p>
<ol>
<li>a标签的color会继承失效</li>
<li>h系列标签的font-size会继承失效</li>
</ol>
<h5 id="层叠性"><a href="#层叠性" class="headerlink" title="层叠性"></a>层叠性</h5><p>属性层层叠加（不同属性）或覆盖（相同属性）</p>
<p>只用选择器优先级相同时，才通过层叠性判断结果</p>
<h3 id="CSS盒子模型"><a href="#CSS盒子模型" class="headerlink" title="CSS盒子模型"></a>CSS盒子模型</h3><h4 id="优先级"><a href="#优先级" class="headerlink" title="优先级"></a>优先级</h4><p>优先级高的选择器样式会覆盖优先级低选择器样式</p>
<p>优先级：</p>
<p><code>继承 &lt; 通配符选择器 &lt; 标签选择器 &lt; 类选择器 &lt; id选择器 &lt; 行内样式 &lt;!important</code></p>
<p><strong>!important使用说明</strong></p>
<ol>
<li>!important写在属性值的后面，分号的前面</li>
<li>!important不能提升继承的优先级</li>
<li>实际开发中<strong>不建议</strong>使用!important</li>
</ol>
<h4 id="盒子模型"><a href="#盒子模型" class="headerlink" title="盒子模型"></a>盒子模型</h4><p>CSS中规定每个盒子分别由：内容区域(content)、内边距区域（padding）、边框区域（border）、外边框区域（margin）构成，这就是 <strong>盒子模型</strong></p>
<p><img src="/images/box.png" alt="box" style="zoom: 67%;" /></p>
<h4 id="边框-border"><a href="#边框-border" class="headerlink" title="边框(border)"></a>边框(border)</h4><p>border连写形式</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">border</span>: <span class="number">10px</span> solid red;</span><br><span class="line"><span class="comment">/*solid 表示实线*/</span></span><br></pre></td></tr></table></figure>
<p><strong>单方向设置</strong></p>
<p>属性名：border-方位名词(left)</p>
<ul>
<li>要注意border会<strong>撑大盒子的尺寸</strong>，写代码时要注意减去边框的尺寸</li>
</ul>
<p><strong>圆角设置</strong></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">border-radius</span>: <span class="number">25px</span>;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>盒子模型的布局顺序：<strong><u>从外到内、从上到下</u></strong></p>
</blockquote>
<h4 id="内边距-padding"><a href="#内边距-padding" class="headerlink" title="内边距(padding)"></a>内边距(padding)</h4><p>padding：上右下左四个方向的内边距</p>
<ul>
<li><p>padding属性可以当作<strong>复合属性</strong>使用，单独设置某个方向的内边距（上右下左顺时针方向）</p>
</li>
<li><p>若取三个值：上、左右、下</p>
</li>
<li><p>若取两个值：上下、左右</p>
</li>
</ul>
<blockquote>
<p>使用<code>padding: 0 16px;</code>替换 <code>width</code> 可提高网页修改的灵活性</p>
</blockquote>
<h4 id="CSS3自动内减"><a href="#CSS3自动内减" class="headerlink" title="CSS3自动内减"></a>CSS3自动内减</h4><p>给盒子设置属性：<code>box-sizing: border-box;</code>即可</p>
<p>优点：浏览器会自动计算多余大小，自动<strong>在内容中减去</strong></p>
<h4 id="外边距-margin"><a href="#外边距-margin" class="headerlink" title="外边距(margin)"></a>外边距(margin)</h4><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">margin</span>: <span class="number">50px</span>;</span><br><span class="line"><span class="attribute">margin-left</span>: <span class="number">20px</span>;</span><br></pre></td></tr></table></figure>
<p>margin只设置两个值、三个值的用法与padding相同。</p>
<p><strong>默认的内外间距</strong>：</p>
<p>清除默认间距：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>版心：网页的有效内容，一般居中</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br></pre></td></tr></table></figure>
<h2 id="快速开发指南"><a href="#快速开发指南" class="headerlink" title="快速开发指南"></a>快速开发指南</h2><h3 id="VScode"><a href="#VScode" class="headerlink" title="VScode"></a>VScode</h3><h4 id="emmet语法"><a href="#emmet语法" class="headerlink" title="emmet语法"></a>emmet语法</h4><div class="table-container">
<table>
<thead>
<tr>
<th>记忆</th>
<th>示例</th>
<th>效果</th>
</tr>
</thead>
<tbody>
<tr>
<td>标签名</td>
<td><code>div</code></td>
<td><code>&lt;div&gt;&lt;/div&gt;</code></td>
</tr>
<tr>
<td>类选择器</td>
<td><code>.red</code></td>
<td><code>&lt;div class=&quot;red&quot;&gt;&lt;/div&gt;</code></td>
</tr>
<tr>
<td>id选择器</td>
<td><code>#one</code></td>
<td><code>&lt;div id=&quot;one&quot;&gt;&lt;/div&gt;</code></td>
</tr>
<tr>
<td>创建多个li</td>
<td><code>ul&gt;li*3</code></td>
<td><code>&lt;ul&gt;&lt;li&gt;&lt;/li&gt;&lt;li&gt;&lt;/li&gt;&lt;li&gt;&lt;/li&gt;&lt;/ul&gt;</code></td>
</tr>
</tbody>
</table>
</div>
<h4 id="快捷开发按键"><a href="#快捷开发按键" class="headerlink" title="快捷开发按键"></a>快捷开发按键</h4><p>Alt+Shift+鼠标左键单击</p>
<h3 id="PxCook"><a href="#PxCook" class="headerlink" title="PxCook"></a>PxCook</h3><p>好用的设计/生成前端代码工具</p>
<p><a href="https://www.fancynode.com.cn/pxcook">PxCook - 高效易用的自动标注工具,生成前端代码,设计研发协作利器 (fancynode.com.cn)</a></p>
]]></content>
      <tags>
        <tag>Web开发</tag>
      </tags>
  </entry>
  <entry>
    <title>深度学习笔记（数学基础）</title>
    <url>/2022/10/06/deepLearning/</url>
    <content><![CDATA[<h2 id="神经网络基本原理"><a href="#神经网络基本原理" class="headerlink" title="神经网络基本原理"></a>神经网络基本原理</h2><h3 id="得分函数"><a href="#得分函数" class="headerlink" title="得分函数"></a>得分函数</h3><p>$<br>f(x;W)=Wx=\begin{pmatrix}W_{1}&amp;W_{2}&amp;… &amp;W_{n}\\\end{pmatrix}\begin{pmatrix}x_{1}\\x_{2}\\ … \\x_{n}\end{pmatrix}=\sum^{n}_{i=1}{W_{i}x_{i}}<br>$</p>
<p>$<br>f(x;W)=Wx=\begin{pmatrix}W_{11}&amp;W_{12}&amp;… &amp;W_{1n}\\W_{21}&amp;W_{22}&amp;… &amp;W_{2n}\end{pmatrix}\begin{pmatrix}x_{1}\\x_{2}\\ … \\x_{n}\end{pmatrix}=\begin{pmatrix}Y_{1}\\Y_{2}\end{pmatrix}<br>$</p>
<p>结果的行数表示类别数，<strong>x</strong>向量表示训练数据，W为权重参数</p>
<p>线性函数：$f(x;W)=Wx+b(偏置参数矩阵)$</p>
<blockquote>
<p>如何根据$\begin{pmatrix}Y_{1}\\Y_{2}\\ … \\Y_{m}\end{pmatrix}$求得对应类别的概率？<strong>归一化</strong></p>
<p>$P(Y=k|X=x_{i})=\frac{e^{s_{k}}}{\sum_{j}{e^{s_{j}}}}$</p>
<p>总结：先求<u>指数</u>，再求<u>所占分数</u></p>
</blockquote>
<span id="more"></span>
<h3 id="损失函数"><a href="#损失函数" class="headerlink" title="损失函数"></a>损失函数</h3><ol>
<li><p>例如，$L_{i}=\sum_{j\neq y_{i}}{max(0,s_{j}-s_{y_{i}} + 1)}$,其中$y_{i}$为正确类别</p>
<p>$L=\frac{1}{N}\sum_{i=1}^{n}\sum_{j\neq y_{i}}max(0,f(x_{i};W)_{j}-f(x_{i};W)_{y_{i}} + 1)+\lambda R(N)$</p>
<p>其中$R(N)$为正则化惩罚项，<strong>$\lambda$增大，会降低过拟合的风险</strong></p>
<p>$R(N)=\sum_{k}\sum_{l}W_{k,l}^{2}$</p>
<p>训练目标：使损失函数L减小</p>
</li>
<li><p>例如，$e=\frac{1}{2}(y-\hat{y})^2$,多样本$E=e^{(1)}+e^{(2)}+…+e^{(n)}=\frac{1}{2}\sum_{i=1}^{n}(y^{(i)}-\hat{y}^{(i)})^2$</p>
<p>其中$\hat{y}^{(i)}=\phi(z^{(i)})=Wx^{(i)}$,$\phi(x)$是线性激活函数</p>
<p>$E=\frac{1}{2}\sum_{i=1}^{n}(y^{(i)}-\hat{y}^{(i)})^2=\frac{1}{2}\sum_{i=1}^{n}(y^{(i)}-Wx^{(i)})^2$</p>
<p>目标：训练合适的W，使差值E取最小值</p>
</li>
</ol>
<h3 id="激活函数（阈值）"><a href="#激活函数（阈值）" class="headerlink" title="激活函数（阈值）"></a>激活函数（阈值）</h3><ol>
<li>Sigmoid函数：$f(z)=\frac{1}{1+e^{-z}}$（缺点：计算时间长）</li>
</ol>
<p><img src="\images\deep1.png" style="zoom:33%;" /></p>
<ol>
<li>ReLu函数：$ReLu(x) = max(0,x)$（优点：计算速度快）</li>
</ol>
<h3 id="梯度下降"><a href="#梯度下降" class="headerlink" title="梯度下降"></a>梯度下降</h3><p>设$W=\begin{pmatrix}<br>w_{1}&amp;w_{2}&amp;… &amp;w_{n}\\<br>\end{pmatrix}$更新权重$w:=w+\Delta w$</p>
<p>$\Delta w=-\eta \nabla J(w)$,其中$\eta$为学习率，表示学习速度（要适中）</p>
<p><img src="\images\deep2.png" style="zoom:50%;" /></p>
<p><img src="\images\deep3.png" style="zoom:50%;" /></p>
<h3 id="多层神经网络"><a href="#多层神经网络" class="headerlink" title="多层神经网络"></a>多层神经网络</h3><p><img src="\images\deep4.png" style="zoom:67%;" /></p>
<ul>
<li><strong>整体架构</strong>：输入层-隐藏层（可以包含多层）-输出层</li>
<li>大于一层的就被称为深度神经网络，层次越多数据处理能力越强</li>
<li>每个连接都有一个权值w</li>
<li>在Hidden Layer增加<strong>神经元</strong>的数量以获取更多特征</li>
</ul>
<p><strong>多层神经网络的训练过程</strong></p>
<blockquote>
<ol>
<li>从输入层开始，将数据经过神经网络传输到输出层，这一步是<strong>前向传播</strong>。</li>
<li>根据输出，计算误差(预测结果和已知结果之间的差异)，得到代价函数。利用梯度下降法最小化误差。</li>
<li>梯度下降法需要计算每个权重的梯度，使用<strong>反向传播</strong>算法计算梯度，根据梯度调整权重值。</li>
</ol>
<p>重复以上3个步骤训练权重参数W。</p>
<p>资料来源：<a href="https://www.qikegu.com/docs/3781">深度学习 – 多层神经网络 | 奇客谷教程 💯 (qikegu.com)</a></p>
</blockquote>
<p><strong>反向传播</strong>：通过链式求导法则求代价函数对各层参数W的偏导数</p>
<h2 id="卷积神经网络"><a href="#卷积神经网络" class="headerlink" title="卷积神经网络"></a>卷积神经网络</h2><p>整体架构：卷积层→Relu层→池化层→连接各层→全连接层</p>
<h3 id="卷积计算"><a href="#卷积计算" class="headerlink" title="卷积计算"></a>卷积计算</h3><p>卷积结果大小计算公式：</p>
<ul>
<li><p>$H_{2}=\frac{H_{1}-F_{H}+2P}{S(步长)}+1$,P为边界填充的圈数</p>
</li>
<li><p>$W_{2}=\frac{W_{1}-F_{W}+2P}{S(步长)}+1$</p>
</li>
</ul>
<h3 id="池化层"><a href="#池化层" class="headerlink" title="池化层"></a>池化层</h3><p><strong>MAXPOOLING</strong>:池化层的目的是压缩</p>
<p>以K*K大小分块，每次取块中最大的元素</p>
<p>$\begin{pmatrix}1&amp;3&amp;2&amp;9\\7&amp;4&amp;1&amp;5&amp;\\8&amp;5&amp;2&amp;3\\4&amp;2&amp;1&amp;4\end{pmatrix}→\begin{pmatrix}7&amp;9\\8&amp;4 \end{pmatrix}$</p>
]]></content>
      <tags>
        <tag>深度学习</tag>
      </tags>
  </entry>
  <entry>
    <title>配置online vscode</title>
    <url>/2022/03/20/online-vscode/</url>
    <content><![CDATA[<p>前段时间购入了一台华为Matepad11，真的非常的香。但是对于经常写代码又不想随时背着笔记本电脑的软院学生而言，遗憾的是，平板上并没有好的代码编辑器。</p>
<p>于是，在云服务器上部署一个online代码编辑器的想法诞生了。</p>
<p>本人用的是大一上学期双十一期间购入的腾讯云轻量应用服务器，最近还免费升级到了4核4G，很赞。</p>
<h3 id="利用docker安装online-vscode"><a href="#利用docker安装online-vscode" class="headerlink" title="利用docker安装online vscode"></a>利用docker安装online vscode</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d --name=code-server \</span><br><span class="line">  -e PUID=1000 \</span><br><span class="line">  -e PGID=1000 \</span><br><span class="line">  -e TZ=Asia/Shanghai \</span><br><span class="line">  -e PASSWORD= \</span><br><span class="line">  -e SUDO_PASSWORD= \</span><br><span class="line">  -p 8080:8443 \</span><br><span class="line">  -v /path/to/appdata/config:/config \</span><br><span class="line">  -v /root/vscode:/vscode \</span><br><span class="line">  --restart unless-stopped \</span><br><span class="line">  lscr.io/linuxserver/code-server</span><br></pre></td></tr></table></figure>
<h3 id="设置腾讯云防火墙"><a href="#设置腾讯云防火墙" class="headerlink" title="设置腾讯云防火墙"></a>设置腾讯云防火墙</h3><p>启动docker以后还是无法在<code>http:IP地址:8080</code>中访问online vscode, 原因是没有在云服务器的防火墙中添加新的规则，开放端口</p>
<p><img src="/images/image-20220320212651339.png" alt="image-20220320212651339"></p>
<p>现在再次访问<code>http:IP地址:8080</code>就可以跳转到登陆界面了，输入之前PASSWORD设置的密码就可以登陆了。</p>
<span id="more"></span>
<p><img src="/images/image-20220320213047933.png" alt="image-20220320213047933"></p>
<h3 id="安装Gcc、Python"><a href="#安装Gcc、Python" class="headerlink" title="安装Gcc、Python"></a>安装Gcc、Python</h3><p>然而，新建的docker里十分干净，连可怜的gcc都没有，于是开始安装。</p>
<ol>
<li><p>首先先进入docker</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it code-server /bin/bash</span><br></pre></td></tr></table></figure>
</li>
<li><p>更新源，安装<code>wget</code>、<code>ping</code>、<code>ifconfig</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get update</span><br><span class="line">apt-get install wget</span><br><span class="line">apt-get install inetutils-ping</span><br><span class="line">apt-get install net-tools</span><br></pre></td></tr></table></figure>
</li>
<li><p>安装gcc</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get install gcc </span><br></pre></td></tr></table></figure>
</li>
<li><p>安装python</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get install python3</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>之后顺便安装了<code>jdk</code>,主要就是敲敲指令，就不多赘述了。</p>
<p>现在我得到了一个可以直接在网页访问的、好用的在线IDE了。</p>
<p><img src="/images/image-20220320214141660.png" alt="image-20220320214141660"></p>
]]></content>
      <tags>
        <tag>云服务器学习生活</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2022/02/23/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>2022年第一次参加高额奖学金答辩</title>
    <url>/2022/09/28/scholarship/</url>
    <content><![CDATA[<p>2022年9月27日，我很高兴也很荣幸能够参加高额奖学金的答辩。感谢学校和同学对我一年学习工作的认可。</p>
<p>在这次答辩中我也真正看到面面俱到的大佬们，无论是党团学习、志愿服务、团学工作、课程成绩、科研创新、社会实践还是技术积累，都取得了很优秀的成绩。</p>
<p>我还得继续努力，多参与活动与比赛，积极向党组织靠拢。</p>
<p>（花旗杯、微信小程序应用开发赛等我得考虑考虑了）</p>
<p><img src="/images/picture1.jpg" alt="picture1"></p>
]]></content>
      <tags>
        <tag>学校生活</tag>
      </tags>
  </entry>
</search>
